{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { Extension } from '@tiptap/core';\nimport { Blockquote } from '@tiptap/extension-blockquote';\nimport { Bold } from '@tiptap/extension-bold';\nimport { BulletList } from '@tiptap/extension-bullet-list';\nimport { Code } from '@tiptap/extension-code';\nimport { CodeBlock } from '@tiptap/extension-code-block';\nimport { Document } from '@tiptap/extension-document';\nimport { Dropcursor } from '@tiptap/extension-dropcursor';\nimport { Gapcursor } from '@tiptap/extension-gapcursor';\nimport { HardBreak } from '@tiptap/extension-hard-break';\nimport { Heading } from '@tiptap/extension-heading';\nimport { History } from '@tiptap/extension-history';\nimport { HorizontalRule } from '@tiptap/extension-horizontal-rule';\nimport { Italic } from '@tiptap/extension-italic';\nimport { ListItem } from '@tiptap/extension-list-item';\nimport { OrderedList } from '@tiptap/extension-ordered-list';\nimport { Paragraph } from '@tiptap/extension-paragraph';\nimport { Strike } from '@tiptap/extension-strike';\nimport { Text } from '@tiptap/extension-text';\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nconst StarterKit = Extension.create({\n  name: 'starterKit',\n  addExtensions() {\n    const extensions = [];\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options.bold));\n    }\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options.blockquote));\n    }\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options.bulletList));\n    }\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options.code));\n    }\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options.codeBlock));\n    }\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options.document));\n    }\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options.dropcursor));\n    }\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options.gapcursor));\n    }\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options.hardBreak));\n    }\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options.heading));\n    }\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options.history));\n    }\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options.horizontalRule));\n    }\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options.italic));\n    }\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options.listItem));\n    }\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options.orderedList));\n    }\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options.paragraph));\n    }\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options.strike));\n    }\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options.text));\n    }\n    return extensions;\n  }\n});\nexport { StarterKit, StarterKit as default };","map":{"version":3,"names":["StarterKit","Extension","create","name","addExtensions","extensions","options","bold","push","Bold","configure","blockquote","Blockquote","bulletList","BulletList","code","Code","codeBlock","CodeBlock","document","Document","dropcursor","Dropcursor","gapcursor","Gapcursor","hardBreak","HardBreak","heading","Heading","history","History","horizontalRule","HorizontalRule","italic","Italic","listItem","ListItem","orderedList","OrderedList","paragraph","Paragraph","strike","Strike","text","Text"],"sources":["../src/starter-kit.ts"],"sourcesContent":["import { Extension } from '@tiptap/core'\nimport { Blockquote, BlockquoteOptions } from '@tiptap/extension-blockquote'\nimport { Bold, BoldOptions } from '@tiptap/extension-bold'\nimport { BulletList, BulletListOptions } from '@tiptap/extension-bullet-list'\nimport { Code, CodeOptions } from '@tiptap/extension-code'\nimport { CodeBlock, CodeBlockOptions } from '@tiptap/extension-code-block'\nimport { Document } from '@tiptap/extension-document'\nimport { Dropcursor, DropcursorOptions } from '@tiptap/extension-dropcursor'\nimport { Gapcursor } from '@tiptap/extension-gapcursor'\nimport { HardBreak, HardBreakOptions } from '@tiptap/extension-hard-break'\nimport { Heading, HeadingOptions } from '@tiptap/extension-heading'\nimport { History, HistoryOptions } from '@tiptap/extension-history'\nimport { HorizontalRule, HorizontalRuleOptions } from '@tiptap/extension-horizontal-rule'\nimport { Italic, ItalicOptions } from '@tiptap/extension-italic'\nimport { ListItem, ListItemOptions } from '@tiptap/extension-list-item'\nimport { OrderedList, OrderedListOptions } from '@tiptap/extension-ordered-list'\nimport { Paragraph, ParagraphOptions } from '@tiptap/extension-paragraph'\nimport { Strike, StrikeOptions } from '@tiptap/extension-strike'\nimport { Text } from '@tiptap/extension-text'\n\nexport interface StarterKitOptions {\n  /**\n   * If set to false, the blockquote extension will not be registered\n   * @example blockquote: false\n   */\n  blockquote: Partial<BlockquoteOptions> | false,\n\n  /**\n   * If set to false, the bold extension will not be registered\n   * @example bold: false\n   */\n  bold: Partial<BoldOptions> | false,\n\n  /**\n   * If set to false, the bulletList extension will not be registered\n   * @example bulletList: false\n   */\n  bulletList: Partial<BulletListOptions> | false,\n\n  /**\n   * If set to false, the code extension will not be registered\n   * @example code: false\n   */\n  code: Partial<CodeOptions> | false,\n\n  /**\n   * If set to false, the codeBlock extension will not be registered\n   * @example codeBlock: false\n   */\n  codeBlock: Partial<CodeBlockOptions> | false,\n\n  /**\n   * If set to false, the document extension will not be registered\n   * @example document: false\n   */\n  document: false,\n\n  /**\n   * If set to false, the dropcursor extension will not be registered\n   * @example dropcursor: false\n   */\n  dropcursor: Partial<DropcursorOptions> | false,\n\n  /**\n   * If set to false, the gapcursor extension will not be registered\n   * @example gapcursor: false\n   */\n  gapcursor: false,\n\n  /**\n   * If set to false, the hardBreak extension will not be registered\n   * @example hardBreak: false\n   */\n  hardBreak: Partial<HardBreakOptions> | false,\n\n  /**\n   * If set to false, the heading extension will not be registered\n   * @example heading: false\n   */\n  heading: Partial<HeadingOptions> | false,\n\n  /**\n   * If set to false, the history extension will not be registered\n   * @example history: false\n   */\n  history: Partial<HistoryOptions> | false,\n\n  /**\n   * If set to false, the horizontalRule extension will not be registered\n   * @example horizontalRule: false\n   */\n  horizontalRule: Partial<HorizontalRuleOptions> | false,\n\n  /**\n   * If set to false, the italic extension will not be registered\n   * @example italic: false\n   */\n  italic: Partial<ItalicOptions> | false,\n\n  /**\n   * If set to false, the listItem extension will not be registered\n   * @example listItem: false\n   */\n  listItem: Partial<ListItemOptions> | false,\n\n  /**\n   * If set to false, the orderedList extension will not be registered\n   * @example orderedList: false\n   */\n  orderedList: Partial<OrderedListOptions> | false,\n\n  /**\n   * If set to false, the paragraph extension will not be registered\n   * @example paragraph: false\n   */\n  paragraph: Partial<ParagraphOptions> | false,\n\n  /**\n   * If set to false, the strike extension will not be registered\n   * @example strike: false\n   */\n  strike: Partial<StrikeOptions> | false,\n\n  /**\n   * If set to false, the text extension will not be registered\n   * @example text: false\n   */\n  text: false,\n}\n\n/**\n * The starter kit is a collection of essential editor extensions.\n *\n * It’s a good starting point for building your own editor.\n */\nexport const StarterKit = Extension.create<StarterKitOptions>({\n  name: 'starterKit',\n\n  addExtensions() {\n    const extensions = []\n\n    if (this.options.bold !== false) {\n      extensions.push(Bold.configure(this.options.bold))\n    }\n\n    if (this.options.blockquote !== false) {\n      extensions.push(Blockquote.configure(this.options.blockquote))\n    }\n\n    if (this.options.bulletList !== false) {\n      extensions.push(BulletList.configure(this.options.bulletList))\n    }\n\n    if (this.options.code !== false) {\n      extensions.push(Code.configure(this.options.code))\n    }\n\n    if (this.options.codeBlock !== false) {\n      extensions.push(CodeBlock.configure(this.options.codeBlock))\n    }\n\n    if (this.options.document !== false) {\n      extensions.push(Document.configure(this.options.document))\n    }\n\n    if (this.options.dropcursor !== false) {\n      extensions.push(Dropcursor.configure(this.options.dropcursor))\n    }\n\n    if (this.options.gapcursor !== false) {\n      extensions.push(Gapcursor.configure(this.options.gapcursor))\n    }\n\n    if (this.options.hardBreak !== false) {\n      extensions.push(HardBreak.configure(this.options.hardBreak))\n    }\n\n    if (this.options.heading !== false) {\n      extensions.push(Heading.configure(this.options.heading))\n    }\n\n    if (this.options.history !== false) {\n      extensions.push(History.configure(this.options.history))\n    }\n\n    if (this.options.horizontalRule !== false) {\n      extensions.push(HorizontalRule.configure(this.options.horizontalRule))\n    }\n\n    if (this.options.italic !== false) {\n      extensions.push(Italic.configure(this.options.italic))\n    }\n\n    if (this.options.listItem !== false) {\n      extensions.push(ListItem.configure(this.options.listItem))\n    }\n\n    if (this.options.orderedList !== false) {\n      extensions.push(OrderedList.configure(this.options.orderedList))\n    }\n\n    if (this.options.paragraph !== false) {\n      extensions.push(Paragraph.configure(this.options.paragraph))\n    }\n\n    if (this.options.strike !== false) {\n      extensions.push(Strike.configure(this.options.strike))\n    }\n\n    if (this.options.text !== false) {\n      extensions.push(Text.configure(this.options.text))\n    }\n\n    return extensions\n  },\n})\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}