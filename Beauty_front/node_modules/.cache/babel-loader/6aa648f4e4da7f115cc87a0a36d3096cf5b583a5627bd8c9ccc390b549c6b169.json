{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { getChatList } from '@/api/message';\nimport { userOtherInfoService } from '@/api/user'; // 获取昵称头像的接口\n\nexport default {\n  __name: 'MyMessage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const chatList = ref([]); // 聊天列表\n    const loading = ref(false);\n    const fetchChatList = async () => {\n      loading.value = true;\n      try {\n        const res = await getChatList();\n        if (res.data.code === 200) {\n          const tempList = res.data.data || [];\n\n          // 批量请求每个聊天对象的基本资料\n          for (const item of tempList) {\n            try {\n              const userInfoRes = await userOtherInfoService(item.targetId);\n              if (userInfoRes.data.code === 200) {\n                item.nickname = userInfoRes.data.data.nickname;\n                item.user_pic = userInfoRes.data.data.user_pic;\n              } else {\n                item.nickname = '未知用户';\n                item.user_pic = '';\n              }\n            } catch (e) {\n              item.nickname = '未知用户';\n              item.user_pic = '';\n            }\n          }\n          chatList.value = tempList;\n        }\n      } catch (err) {\n        ElMessage.error(err.msg || '获取消息列表失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n\n    // 点击聊天\n    const handleChatClick = targetId => {\n      router.push({\n        name: 'ChatDetail',\n        params: {\n          targetId\n        }\n      });\n    };\n    onMounted(() => {\n      fetchChatList();\n    });\n    const __returned__ = {\n      router,\n      chatList,\n      loading,\n      fetchChatList,\n      handleChatClick,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getChatList() {\n        return getChatList;\n      },\n      get userOtherInfoService() {\n        return userOtherInfoService;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","getChatList","userOtherInfoService","router","chatList","loading","fetchChatList","value","res","data","code","tempList","item","userInfoRes","targetId","nickname","user_pic","e","err","error","msg","handleChatClick","push","name","params"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/views/Mine/MyMessage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getChatList } from '@/api/message'\r\nimport { userOtherInfoService } from '@/api/user' // 获取昵称头像的接口\r\n\r\nconst router = useRouter()\r\nconst chatList = ref([]) // 聊天列表\r\nconst loading = ref(false)\r\n\r\nconst fetchChatList = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await getChatList()\r\n    if (res.data.code === 200) {\r\n      const tempList = res.data.data || []\r\n\r\n      // 批量请求每个聊天对象的基本资料\r\n      for (const item of tempList) {\r\n        try {\r\n          const userInfoRes = await userOtherInfoService(item.targetId)\r\n          if (userInfoRes.data.code === 200) {\r\n            item.nickname = userInfoRes.data.data.nickname\r\n            item.user_pic = userInfoRes.data.data.user_pic\r\n          } else {\r\n            item.nickname = '未知用户'\r\n            item.user_pic = ''\r\n          }\r\n        } catch (e) {\r\n          item.nickname = '未知用户'\r\n          item.user_pic = ''\r\n        }\r\n      }\r\n\r\n      chatList.value = tempList\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(err.msg || '获取消息列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 点击聊天\r\nconst handleChatClick = (targetId) => {\r\n  router.push({ name: 'ChatDetail', params: { targetId } })\r\n}\r\n\r\nonMounted(() => {\r\n  fetchChatList()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main-content\">\r\n    <el-button class=\"back-btn\" type=\"primary\" plain @click=\"() => router.push('/')\">\r\n      返回首页\r\n    </el-button>\r\n\r\n    <div class=\"section-title\">我的消息</div>\r\n\r\n    <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"chatList\"\r\n        style=\"width: 100%;\"\r\n        @row-click=\"row => handleChatClick(row.targetId)\"\r\n    >\r\n      <el-table-column label=\"头像\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-avatar :src=\"row.user_pic\" size=\"large\">\r\n            {{ row.nickname ? row.nickname[0] : '?' }}\r\n          </el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"昵称\" prop=\"nickname\" width=\"180\" />\r\n\r\n      <el-table-column label=\"最新消息\" prop=\"lastMessage\" min-width=\"300\" />\r\n\r\n      <el-table-column label=\"时间\" prop=\"lastTime\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ row.lastTime ? new Date(row.lastTime).toLocaleString() : '' }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"未读数\" prop=\"unReadCount\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-badge :value=\"row.unReadCount\" :max=\"99\" v-if=\"row.unReadCount > 0\">\r\n            <span style=\"color: #409EFF;\">未读</span>\r\n          </el-badge>\r\n          <span v-else style=\"color: #999;\">已读</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.main-content {\r\n  flex: 1;\r\n  width: 1720px;\r\n  height: 765px;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n  background: #f5f7fa;\r\n  padding: 20px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  background-color: #eef1f6;\r\n  padding: 10px 15px;\r\n  border-left: 5px solid #409EFF;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.back-btn {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,WAAW,QAAQ,eAAe;AAC3C,SAASC,oBAAoB,QAAQ,YAAY,EAAC;;;;;;;;IAElD,MAAMC,MAAM,GAAGJ,SAAS,CAAC,CAAC;IAC1B,MAAMK,QAAQ,GAAGP,GAAG,CAAC,EAAE,CAAC,EAAC;IACzB,MAAMQ,OAAO,GAAGR,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMS,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChCD,OAAO,CAACE,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMP,WAAW,CAAC,CAAC;QAC/B,IAAIO,GAAG,CAACC,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;UACzB,MAAMC,QAAQ,GAAGH,GAAG,CAACC,IAAI,CAACA,IAAI,IAAI,EAAE;;UAEpC;UACA,KAAK,MAAMG,IAAI,IAAID,QAAQ,EAAE;YAC3B,IAAI;cACF,MAAME,WAAW,GAAG,MAAMX,oBAAoB,CAACU,IAAI,CAACE,QAAQ,CAAC;cAC7D,IAAID,WAAW,CAACJ,IAAI,CAACC,IAAI,KAAK,GAAG,EAAE;gBACjCE,IAAI,CAACG,QAAQ,GAAGF,WAAW,CAACJ,IAAI,CAACA,IAAI,CAACM,QAAQ;gBAC9CH,IAAI,CAACI,QAAQ,GAAGH,WAAW,CAACJ,IAAI,CAACA,IAAI,CAACO,QAAQ;cAChD,CAAC,MAAM;gBACLJ,IAAI,CAACG,QAAQ,GAAG,MAAM;gBACtBH,IAAI,CAACI,QAAQ,GAAG,EAAE;cACpB;YACF,CAAC,CAAC,OAAOC,CAAC,EAAE;cACVL,IAAI,CAACG,QAAQ,GAAG,MAAM;cACtBH,IAAI,CAACI,QAAQ,GAAG,EAAE;YACpB;UACF;UAEAZ,QAAQ,CAACG,KAAK,GAAGI,QAAQ;QAC3B;MACF,CAAC,CAAC,OAAOO,GAAG,EAAE;QACZlB,SAAS,CAACmB,KAAK,CAACD,GAAG,CAACE,GAAG,IAAI,UAAU,CAAC;MACxC,CAAC,SAAS;QACRf,OAAO,CAACE,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;;IAED;IACA,MAAMc,eAAe,GAAIP,QAAQ,IAAK;MACpCX,MAAM,CAACmB,IAAI,CAAC;QAAEC,IAAI,EAAE,YAAY;QAAEC,MAAM,EAAE;UAAEV;QAAS;MAAE,CAAC,CAAC;IAC3D,CAAC;IAEDhB,SAAS,CAAC,MAAM;MACdQ,aAAa,CAAC,CAAC;IACjB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}