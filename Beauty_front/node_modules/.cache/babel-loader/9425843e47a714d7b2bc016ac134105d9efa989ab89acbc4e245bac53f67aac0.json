{"ast":null,"code":"import { ref, onMounted, nextTick } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { getChatList, getHistory, sendMessage, setMessageRead } from '@/api/prMessage';\nimport { userOtherInfoService, userInfoService } from '@/api/user';\nexport default {\n  __name: 'MyMessage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const chatList = ref([]);\n    const activeChat = ref(null);\n    const messages = ref([]);\n    const inputMessage = ref('');\n    const pageNum = ref(1);\n    const pageSize = ref(20);\n    const loadingMessages = ref(false);\n    const currentUser = ref({});\n    const chatBodyRef = ref(null);\n    const router = useRouter();\n    const goBack = () => {\n      router.back();\n    };\n\n    // 获取当前用户信息\n    const fetchCurrentUser = async () => {\n      try {\n        const res = await userInfoService();\n        if (res.data) {\n          currentUser.value = res.data; // 成功后赋值\n          console.log('[Chat] 当前登录用户信息:', currentUser.value);\n        }\n      } catch (err) {\n        if (err?.response?.status === 401) {\n          console.warn('[Chat] 用户未登录，跳过');\n        } else {\n          console.error('[Chat] 获取当前用户信息失败:', err);\n          ElMessage.error('无法获取当前登录信息');\n        }\n      }\n    };\n    const fetchChatList = async () => {\n      try {\n        const res = await getChatList();\n        console.log('聊天列表完整响应:', res);\n        if (res.code === 0) {\n          chatList.value = res.data || [];\n          console.log('赋值后的chatList:', chatList.value);\n        } else {\n          console.error('后端返回失败:', res);\n          ElMessage.error(res.msg || '获取聊天列表失败');\n        }\n      } catch (err) {\n        console.error('请求异常:', err);\n        ElMessage.error('网络错误');\n      }\n    };\n\n    // 拉取聊天记录\n    const fetchMessages = async () => {\n      if (!activeChat.value) return;\n      loadingMessages.value = true;\n      try {\n        const res = await getHistory({\n          pageNum: pageNum.value,\n          pageSize: pageSize.value,\n          target_id: activeChat.value.target_id\n        });\n        if (res.code === 200) {\n          messages.value = res.data || [];\n          await nextTick();\n          scrollToBottom();\n        }\n      } catch (err) {\n        ElMessage.error('获取消息失败');\n      } finally {\n        loadingMessages.value = false;\n      }\n    };\n\n    // 选择聊天对象\n    const selectChat = async chat => {\n      activeChat.value = chat;\n      pageNum.value = 1;\n      await fetchMessages();\n      await setMessageRead(chat.targetId);\n    };\n\n    // 发送消息\n    const sendMsg = async () => {\n      if (!inputMessage.value.trim() || !activeChat.value) return;\n      try {\n        await sendMessage({\n          to_id: activeChat.value.targetId,\n          content: inputMessage.value.trim()\n        });\n        inputMessage.value = '';\n        await fetchMessages();\n      } catch (err) {\n        ElMessage.error('发送失败');\n      }\n    };\n\n    // 自动滚动到底\n    const scrollToBottom = () => {\n      if (chatBodyRef.value) {\n        chatBodyRef.value.scrollTop = chatBodyRef.value.scrollHeight;\n      }\n    };\n    onMounted(async () => {\n      await fetchCurrentUser();\n      await fetchChatList();\n    });\n    const __returned__ = {\n      chatList,\n      activeChat,\n      messages,\n      inputMessage,\n      pageNum,\n      pageSize,\n      loadingMessages,\n      currentUser,\n      chatBodyRef,\n      router,\n      goBack,\n      fetchCurrentUser,\n      fetchChatList,\n      fetchMessages,\n      selectChat,\n      sendMsg,\n      scrollToBottom,\n      ref,\n      onMounted,\n      nextTick,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getChatList() {\n        return getChatList;\n      },\n      get getHistory() {\n        return getHistory;\n      },\n      get sendMessage() {\n        return sendMessage;\n      },\n      get setMessageRead() {\n        return setMessageRead;\n      },\n      get userOtherInfoService() {\n        return userOtherInfoService;\n      },\n      get userInfoService() {\n        return userInfoService;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","nextTick","useRouter","ElMessage","getChatList","getHistory","sendMessage","setMessageRead","userOtherInfoService","userInfoService","chatList","activeChat","messages","inputMessage","pageNum","pageSize","loadingMessages","currentUser","chatBodyRef","router","goBack","back","fetchCurrentUser","res","data","value","console","log","err","response","status","warn","error","fetchChatList","code","msg","fetchMessages","target_id","scrollToBottom","selectChat","chat","targetId","sendMsg","trim","to_id","content","scrollTop","scrollHeight"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/views/Mine/MyMessage.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted, nextTick} from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport {ElMessage} from 'element-plus'\r\nimport {getChatList, getHistory, sendMessage, setMessageRead} from '@/api/prMessage'\r\nimport {userOtherInfoService, userInfoService} from '@/api/user'\r\n\r\nconst chatList = ref([])\r\nconst activeChat = ref(null)\r\nconst messages = ref([])\r\nconst inputMessage = ref('')\r\nconst pageNum = ref(1)\r\nconst pageSize = ref(20)\r\nconst loadingMessages = ref(false)\r\nconst currentUser = ref({})\r\nconst chatBodyRef = ref(null)\r\n\r\nconst router = useRouter()\r\n\r\nconst goBack = () => {\r\n  router.back()\r\n}\r\n\r\n// 获取当前用户信息\r\nconst fetchCurrentUser = async () => {\r\n  try {\r\n    const res = await userInfoService()\r\n    if (res.data) {\r\n      currentUser.value = res.data  // 成功后赋值\r\n      console.log('[Chat] 当前登录用户信息:', currentUser.value)\r\n    }\r\n  } catch (err) {\r\n    if (err?.response?.status === 401) {\r\n      console.warn('[Chat] 用户未登录，跳过')\r\n    } else {\r\n      console.error('[Chat] 获取当前用户信息失败:', err)\r\n      ElMessage.error('无法获取当前登录信息')\r\n    }\r\n  }\r\n}\r\n\r\n\r\n\r\nconst fetchChatList = async () => {\r\n  try {\r\n    const res = await getChatList()\r\n    console.log('聊天列表完整响应:', res)\r\n\r\n    if (res.code === 0) {\r\n      chatList.value = res.data || []\r\n      console.log('赋值后的chatList:', chatList.value)\r\n    } else {\r\n      console.error('后端返回失败:', res)\r\n      ElMessage.error(res.msg || '获取聊天列表失败')\r\n    }\r\n  } catch (err) {\r\n    console.error('请求异常:', err)\r\n    ElMessage.error('网络错误')\r\n  }\r\n}\r\n\r\n\r\n// 拉取聊天记录\r\nconst fetchMessages = async () => {\r\n  if (!activeChat.value) return\r\n  loadingMessages.value = true\r\n  try {\r\n    const res = await getHistory({\r\n      pageNum: pageNum.value,\r\n      pageSize: pageSize.value,\r\n      target_id: activeChat.value.target_id\r\n    })\r\n    if (res.code === 200) {\r\n      messages.value = res.data || []\r\n      await nextTick()\r\n      scrollToBottom()\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取消息失败')\r\n  } finally {\r\n    loadingMessages.value = false\r\n  }\r\n}\r\n\r\n// 选择聊天对象\r\nconst selectChat = async (chat) => {\r\n  activeChat.value = chat\r\n  pageNum.value = 1\r\n  await fetchMessages()\r\n  await setMessageRead(chat.targetId)\r\n}\r\n\r\n// 发送消息\r\nconst sendMsg = async () => {\r\n  if (!inputMessage.value.trim() || !activeChat.value) return\r\n  try {\r\n    await sendMessage({\r\n      to_id: activeChat.value.targetId,\r\n      content: inputMessage.value.trim()\r\n    })\r\n    inputMessage.value = ''\r\n    await fetchMessages()\r\n  } catch (err) {\r\n    ElMessage.error('发送失败')\r\n  }\r\n}\r\n\r\n// 自动滚动到底\r\nconst scrollToBottom = () => {\r\n  if (chatBodyRef.value) {\r\n    chatBodyRef.value.scrollTop = chatBodyRef.value.scrollHeight\r\n  }\r\n}\r\n\r\nonMounted(async () => {\r\n  await fetchCurrentUser()\r\n  await fetchChatList()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main-content\">\r\n    <el-button type=\"primary\" plain class=\"back-btn\" @click=\"goBack\">\r\n      返回首页\r\n    </el-button>\r\n    <div class=\"message-page\">\r\n      <div class=\"chat-list\">\r\n        <div\r\n            v-for=\"chat in chatList\"\r\n            :key=\"chat.targetId\"\r\n            class=\"chat-item\"\r\n            :class=\"{ active: activeChat && activeChat.targetId === chat.targetId }\"\r\n            @click=\"selectChat(chat)\"\r\n        >\r\n          <el-avatar :src=\"chat.user_pic\" size=\"large\">{{ chat.nickname ? chat.nickname[0] : '?' }}</el-avatar>\r\n          <div class=\"chat-info\">\r\n            <div class=\"chat-name\">{{ chat.nickname }}</div>\r\n            <div class=\"chat-last\">{{ chat.lastMessage }}</div>\r\n          </div>\r\n          <el-badge :value=\"chat.unReadCount\" v-if=\"chat.unReadCount > 0\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-window\" v-if=\"activeChat\">\r\n        <div class=\"chat-header\">\r\n          与 {{ activeChat.nickname }} 的聊天\r\n        </div>\r\n\r\n        <div class=\"chat-body\" ref=\"chatBodyRef\" v-loading=\"loadingMessages\">\r\n          <div v-for=\"msg in messages\" :key=\"msg.message_id\" class=\"chat-message\"\r\n               :class=\"{ 'me': msg.from_id === currentUser.user_id }\">\r\n            <div class=\"chat-content\">{{ msg.content }}</div>\r\n            <div class=\"chat-time\">{{ new Date(msg.created_at).toLocaleString() }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-input\">\r\n          <el-input\r\n              v-model=\"inputMessage\"\r\n              placeholder=\"请输入消息\"\r\n              @keyup.enter=\"sendMsg\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"sendMsg\">发送</el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-window\" v-else>\r\n        <div class=\"chat-placeholder\">请选择一个聊天</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.main-content {\r\n  flex: 1;\r\n  width: 1720px;\r\n  margin: 0 auto;\r\n  background: #f5f7fa;\r\n}\r\n.message-page {\r\n  display: flex;\r\n  width: 1720px;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n  height: 90vh;\r\n  background: #f5f7fa;\r\n}\r\n\r\n.chat-list {\r\n  width: 300px;\r\n  background: white;\r\n  border-right: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.chat-item.active {\r\n  background: #e6f7ff;\r\n}\r\n\r\n.chat-info {\r\n  margin-left: 10px;\r\n  flex: 1;\r\n}\r\n\r\n.chat-name {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.chat-last {\r\n  color: #999;\r\n  font-size: 12px;\r\n}\r\n\r\n.chat-window {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-header {\r\n  background: white;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-body {\r\n  flex: 1;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  max-width: 60%;\r\n  word-break: break-word;\r\n}\r\n\r\n.chat-message.me {\r\n  margin-left: auto;\r\n  text-align: right;\r\n}\r\n\r\n.chat-content {\r\n  display: inline-block;\r\n  background: #409eff;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chat-message.me .chat-content {\r\n  background: #67c23a;\r\n}\r\n\r\n.chat-time {\r\n  font-size: 10px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  padding: 15px;\r\n  background: white;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.chat-placeholder {\r\n  margin: auto;\r\n  font-size: 20px;\r\n  color: #ccc;\r\n}\r\n\r\n.back-btn {\r\n  margin: 5px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}