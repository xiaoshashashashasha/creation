{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { uploadFile } from '@/api/fileUpload';\nimport { creationInfo, creationClassList, updateCreation } from '@/api/creation';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  __name: 'UpdateCreationPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const route = useRoute();\n    const creationId = route.params.id;\n    const form = ref({\n      creation_id: null,\n      title: '',\n      abs_text: '',\n      cover_pic: '',\n      content: '<p><br></p>',\n      class_id: null\n    });\n    const classOptions = ref([]);\n    const editorVisible = ref(false); // ✅ 控制富文本渲染\n    const loading = ref(false);\n    const decodeHTML = htmlStr => {\n      const textarea = document.createElement('textarea');\n      textarea.innerHTML = htmlStr;\n      return textarea.value;\n    };\n    const fetchCreationDetail = async () => {\n      try {\n        const res = await creationInfo(creationId);\n        const data = res.data;\n        form.value = {\n          creation_id: data.creation_id,\n          title: data.title,\n          abs_text: data.abs_text,\n          cover_pic: data.cover_pic,\n          content: decodeHTML(data.content),\n          class_id: data.class_id\n        };\n        editorVisible.value = true; // ✅ 等内容设置完再显示编辑器\n      } catch (err) {\n        ElMessage.error('获取内容失败');\n      }\n    };\n    const fetchClassOptions = async () => {\n      try {\n        const res = await creationClassList({\n          pageNum: 1,\n          pageSize: 100\n        });\n        classOptions.value = res.data.items || [];\n      } catch (err) {\n        ElMessage.error('获取分类失败');\n      }\n    };\n    const handleUpload = async ({\n      file\n    }) => {\n      try {\n        const res = await uploadFile(file);\n        form.value.cover_pic = res.data;\n        ElMessage.success('上传成功');\n      } catch {\n        ElMessage.error('上传失败');\n      }\n    };\n    const handleSubmit = async () => {\n      const {\n        title,\n        abs_text,\n        cover_pic,\n        content,\n        class_id\n      } = form.value;\n      const isEmptyContent = !content || content.trim() === '' || content === '<p><br></p>';\n      if (!title || !abs_text || !cover_pic || isEmptyContent || !class_id) {\n        return ElMessage.warning('请完整填写所有信息');\n      }\n      loading.value = true;\n      try {\n        await updateCreation({\n          ...form.value\n        });\n        ElMessage.success('更新成功');\n        router.back();\n      } catch (err) {\n        ElMessage.error('更新失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    onMounted(() => {\n      fetchClassOptions();\n      fetchCreationDetail();\n    });\n    const __returned__ = {\n      router,\n      route,\n      creationId,\n      form,\n      classOptions,\n      editorVisible,\n      loading,\n      decodeHTML,\n      fetchCreationDetail,\n      fetchClassOptions,\n      handleUpload,\n      handleSubmit,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get useRoute() {\n        return useRoute;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get uploadFile() {\n        return uploadFile;\n      },\n      get creationInfo() {\n        return creationInfo;\n      },\n      get creationClassList() {\n        return creationClassList;\n      },\n      get updateCreation() {\n        return updateCreation;\n      },\n      RichTextEditor\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","useRoute","ElMessage","uploadFile","creationInfo","creationClassList","updateCreation","RichTextEditor","router","route","creationId","params","id","form","creation_id","title","abs_text","cover_pic","content","class_id","classOptions","editorVisible","loading","decodeHTML","htmlStr","textarea","document","createElement","innerHTML","value","fetchCreationDetail","res","data","err","error","fetchClassOptions","pageNum","pageSize","items","handleUpload","file","success","handleSubmit","isEmptyContent","trim","warning","back"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/views/UpdateCreationPage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter, useRoute } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { uploadFile } from '@/api/fileUpload'\r\nimport { creationInfo, creationClassList, updateCreation } from '@/api/creation'\r\nimport RichTextEditor from '@/components/RichTextEditor.vue'\r\n\r\nconst router = useRouter()\r\nconst route = useRoute()\r\nconst creationId = route.params.id\r\n\r\nconst form = ref({\r\n  creation_id: null,\r\n  title: '',\r\n  abs_text: '',\r\n  cover_pic: '',\r\n  content: '<p><br></p>',\r\n  class_id: null\r\n})\r\n\r\nconst classOptions = ref([])\r\nconst editorVisible = ref(false) // ✅ 控制富文本渲染\r\nconst loading = ref(false)\r\n\r\nconst decodeHTML = (htmlStr) => {\r\n  const textarea = document.createElement('textarea')\r\n  textarea.innerHTML = htmlStr\r\n  return textarea.value\r\n}\r\n\r\nconst fetchCreationDetail = async () => {\r\n  try {\r\n    const res = await creationInfo(creationId)\r\n    const data = res.data\r\n\r\n    form.value = {\r\n      creation_id: data.creation_id,\r\n      title: data.title,\r\n      abs_text: data.abs_text,\r\n      cover_pic: data.cover_pic,\r\n      content: decodeHTML(data.content),\r\n      class_id: data.class_id\r\n    }\r\n\r\n    editorVisible.value = true // ✅ 等内容设置完再显示编辑器\r\n  } catch (err) {\r\n    ElMessage.error('获取内容失败')\r\n  }\r\n}\r\n\r\nconst fetchClassOptions = async () => {\r\n  try {\r\n    const res = await creationClassList({ pageNum: 1, pageSize: 100 })\r\n    classOptions.value = res.data.items || []\r\n  } catch (err) {\r\n    ElMessage.error('获取分类失败')\r\n  }\r\n}\r\n\r\nconst handleUpload = async ({ file }) => {\r\n  try {\r\n    const res = await uploadFile(file)\r\n    form.value.cover_pic = res.data\r\n    ElMessage.success('上传成功')\r\n  } catch {\r\n    ElMessage.error('上传失败')\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  const { title, abs_text, cover_pic, content, class_id } = form.value\r\n  const isEmptyContent = !content || content.trim() === '' || content === '<p><br></p>'\r\n\r\n  if (!title || !abs_text || !cover_pic || isEmptyContent || !class_id) {\r\n    return ElMessage.warning('请完整填写所有信息')\r\n  }\r\n\r\n  loading.value = true\r\n  try {\r\n    await updateCreation({ ...form.value })\r\n    ElMessage.success('更新成功')\r\n    router.back()\r\n  } catch (err) {\r\n    ElMessage.error('更新失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchClassOptions()\r\n  fetchCreationDetail()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"creation-page\">\r\n    <div class=\"header\">\r\n      <el-button icon=\"el-icon-arrow-left\" @click=\"router.back()\">返回</el-button>\r\n    </div>\r\n\r\n    <div class=\"form-section\">\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"封面\">\r\n          <div class=\"upload-box\">\r\n            <img v-if=\"form.cover_pic\" :src=\"form.cover_pic\" class=\"cover-img\" />\r\n            <el-upload :http-request=\"handleUpload\" :show-file-list=\"false\" accept=\"image/*\">\r\n              <el-button type=\"primary\">上传封面</el-button>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"分类\">\r\n          <el-select v-model=\"form.class_id\" placeholder=\"请选择分类\" style=\"width: 160px\">\r\n            <el-option\r\n                v-for=\"cls in classOptions\"\r\n                :key=\"cls.class_id\"\r\n                :label=\"cls.class_name\"\r\n                :value=\"cls.class_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"标题\">\r\n          <el-input v-model=\"form.title\" placeholder=\"1~10字\" maxlength=\"10\" show-word-limit />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"摘要\">\r\n          <el-input v-model=\"form.abs_text\" placeholder=\"1~30字\" maxlength=\"30\" show-word-limit />\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"editor-section\">\r\n      <RichTextEditor\r\n          v-if=\"editorVisible\"\r\n          v-model=\"form.content\"\r\n          :visible=\"editorVisible\"\r\n      />\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <el-button type=\"success\" @click=\"handleSubmit\" :loading=\"loading\">保存修改</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.creation-page {\r\n  max-width: 1080px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.upload-box {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.cover-img {\r\n  width: 200px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.editor-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.submit-btn {\r\n  text-align: center;\r\n  margin-top: 30px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}