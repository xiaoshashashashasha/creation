{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, normalizeClass as _normalizeClass, normalizeStyle as _normalizeStyle, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, Transition as _Transition } from \"vue\";\nconst _hoisted_1 = {\n  class: \"sidebar-container\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_menu_item = _resolveComponent(\"el-menu-item\");\n  const _component_el_sub_menu = _resolveComponent(\"el-sub-menu\");\n  const _component_el_menu = _resolveComponent(\"el-menu\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createCommentVNode(\" 我的按钮 \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"my-btn\", {\n      open: $setup.isOpen\n    }]),\n    onClick: $setup.toggleSidebar,\n    style: _normalizeStyle({\n      right: $setup.isOpen ? `${280 + $setup.scrollbarWidth}px` : `${$setup.scrollbarWidth}px`\n    })\n  }, \" 我的 \", 6 /* CLASS, STYLE */), _createCommentVNode(\" 侧边栏内容区域 \"), _createVNode(_Transition, {\n    name: \"slide\"\n  }, {\n    default: _withCtx(() => [$setup.isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n      key: 0,\n      class: \"sidebar-content\",\n      style: _normalizeStyle({\n        right: `${$setup.scrollbarWidth}px`\n      })\n    }, [_createVNode(_component_el_menu, {\n      class: \"menu\",\n      \"default-active\": $setup.activeMenu\n    }, {\n      default: _withCtx(() => [_createVNode(_component_el_sub_menu, {\n        index: \"1\"\n      }, {\n        title: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"基本信息\")])),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          index: \"1-1\"\n        }, {\n          default: _withCtx(() => _cache[1] || (_cache[1] = [_createTextVNode(\"个人资料\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          index: \"1-2\"\n        }, {\n          default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\"账号安全\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      }), _createVNode(_component_el_sub_menu, {\n        index: \"2\"\n      }, {\n        title: _withCtx(() => _cache[3] || (_cache[3] = [_createTextVNode(\"我的内容\")])),\n        default: _withCtx(() => [_createVNode(_component_el_menu_item, {\n          index: \"2-1\"\n        }, {\n          default: _withCtx(() => _cache[4] || (_cache[4] = [_createTextVNode(\"我的收藏\")])),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_el_menu_item, {\n          index: \"2-2\"\n        }, {\n          default: _withCtx(() => _cache[5] || (_cache[5] = [_createTextVNode(\"浏览历史\")])),\n          _: 1 /* STABLE */\n        })]),\n        _: 1 /* STABLE */\n      })]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"default-active\"])], 4 /* STYLE */)) : _createCommentVNode(\"v-if\", true)]),\n    _: 1 /* STABLE */\n  })]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createCommentVNode","_createElementVNode","_normalizeClass","open","$setup","isOpen","onClick","toggleSidebar","style","_normalizeStyle","right","scrollbarWidth","_createVNode","_Transition","name","default","_withCtx","key","_component_el_menu","activeMenu","_component_el_sub_menu","index","title","_cache","_createTextVNode","_component_el_menu_item","_"],"sources":["C:\\Users\\32561\\Desktop\\毕设仓库\\beauty-front\\src\\components\\Mine_side.vue"],"sourcesContent":["<template>\r\n  <div class=\"sidebar-container\">\r\n    <!-- 我的按钮 -->\r\n    <div\r\n        class=\"my-btn\"\r\n        :class=\"{ open: isOpen }\"\r\n        @click=\"toggleSidebar\"\r\n        :style=\"{ right: isOpen ? `${280 + scrollbarWidth}px` : `${scrollbarWidth}px` }\"\r\n    >\r\n      我的\r\n    </div>\r\n\r\n    <!-- 侧边栏内容区域 -->\r\n    <transition name=\"slide\">\r\n      <div\r\n          v-if=\"isOpen\"\r\n          class=\"sidebar-content\"\r\n          :style=\"{ right: `${scrollbarWidth}px` }\"\r\n      >\r\n        <el-menu class=\"menu\" :default-active=\"activeMenu\">\r\n          <el-sub-menu index=\"1\">\r\n            <template #title>基本信息</template>\r\n            <el-menu-item index=\"1-1\">个人资料</el-menu-item>\r\n            <el-menu-item index=\"1-2\">账号安全</el-menu-item>\r\n          </el-sub-menu>\r\n\r\n          <el-sub-menu index=\"2\">\r\n            <template #title>我的内容</template>\r\n            <el-menu-item index=\"2-1\">我的收藏</el-menu-item>\r\n            <el-menu-item index=\"2-2\">浏览历史</el-menu-item>\r\n          </el-sub-menu>\r\n        </el-menu>\r\n      </div>\r\n    </transition>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script setup>\r\nimport { ref, onMounted } from 'vue'\r\n\r\nconst isOpen = ref(false)\r\nconst activeMenu = ref('1-1')\r\nconst scrollbarWidth = ref(20)  // 默认值（大部分系统是 16px）\r\n\r\n// 计算滚动条宽度\r\nconst getScrollbarWidth = () => {\r\n  return window.innerWidth - document.documentElement.clientWidth\r\n}\r\n\r\nconst toggleSidebar = () => {\r\n  isOpen.value = !isOpen.value\r\n}\r\n\r\nonMounted(() => {\r\n  scrollbarWidth.value = getScrollbarWidth()\r\n  window.addEventListener('resize', () => {\r\n    scrollbarWidth.value = getScrollbarWidth()\r\n  })\r\n})\r\n\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.sidebar-container {\r\n  position: relative;\r\n  height: 100vh;\r\n}\r\n\r\n/* 我的按钮 */\r\n.my-btn {\r\n  position: fixed;\r\n  top: 60px;\r\n  background-color: #409EFF;\r\n  color: white;\r\n  width: 40px;\r\n  height: 120px;\r\n  line-height: 120px;\r\n  text-align: center;\r\n  border-radius: 10px 0 0 10px;\r\n  cursor: pointer;\r\n  transition: all 0.3s;\r\n  z-index: 999;\r\n}\r\n\r\n.my-btn.open {\r\n  right: 300px;\r\n}\r\n\r\n/* 侧边栏内容 */\r\n.sidebar-content {\r\n  position: fixed;\r\n  right: 20px;\r\n  top: 60px;\r\n  width: 260px;\r\n  height: 100vh;\r\n  background-color: #fff;\r\n  box-shadow: -2px 0 8px rgba(0, 0, 0, 0.1);\r\n  padding: 20px 10px;\r\n  z-index: 998;\r\n}\r\n\r\n.menu {\r\n  border-right: none;\r\n}\r\n\r\n/* 动画效果 */\r\n.slide-enter-active, .slide-leave-active {\r\n  transition: all 0.3s;\r\n}\r\n.slide-enter-from, .slide-leave-to {\r\n  transform: translateX(100%);\r\n}\r\n</style>\r\n"],"mappings":";;EACOA,KAAK,EAAC;AAAmB;;;;;uBAA9BC,mBAAA,CAiCM,OAjCNC,UAiCM,GAhCJC,mBAAA,UAAa,EACbC,mBAAA,CAOM;IANFJ,KAAK,EAJbK,eAAA,EAIc,QAAQ;MAAAC,IAAA,EACEC,MAAA,CAAAC;IAAM;IACrBC,OAAK,EAAEF,MAAA,CAAAG,aAAa;IACpBC,KAAK,EAPdC,eAAA;MAAAC,KAAA,EAOyBN,MAAA,CAAAC,MAAM,YAAYD,MAAA,CAAAO,cAAc,UAAUP,MAAA,CAAAO,cAAc;IAAA;KAC5E,MAED,yBAEAX,mBAAA,aAAgB,EAChBY,YAAA,CAoBaC,WAAA;IApBDC,IAAI,EAAC;EAAO;IAb5BC,OAAA,EAAAC,QAAA,CAcM,MAkBM,CAjBIZ,MAAA,CAAAC,MAAM,I,cADhBP,mBAAA,CAkBM;MAhCZmB,GAAA;MAgBUpB,KAAK,EAAC,iBAAiB;MACtBW,KAAK,EAjBhBC,eAAA;QAAAC,KAAA,KAiB8BN,MAAA,CAAAO,cAAc;MAAA;QAEpCC,YAAA,CAYUM,kBAAA;MAZDrB,KAAK,EAAC,MAAM;MAAE,gBAAc,EAAEO,MAAA,CAAAe;;MAnB/CJ,OAAA,EAAAC,QAAA,CAoBU,MAIc,CAJdJ,YAAA,CAIcQ,sBAAA;QAJDC,KAAK,EAAC;MAAG;QACTC,KAAK,EAAAN,QAAA,CAAC,MAAIO,MAAA,QAAAA,MAAA,OArBjCC,gBAAA,CAqB6B,MAAI,E;QArBjCT,OAAA,EAAAC,QAAA,CAsBY,MAA6C,CAA7CJ,YAAA,CAA6Ca,uBAAA;UAA/BJ,KAAK,EAAC;QAAK;UAtBrCN,OAAA,EAAAC,QAAA,CAsBsC,MAAIO,MAAA,QAAAA,MAAA,OAtB1CC,gBAAA,CAsBsC,MAAI,E;UAtB1CE,CAAA;YAuBYd,YAAA,CAA6Ca,uBAAA;UAA/BJ,KAAK,EAAC;QAAK;UAvBrCN,OAAA,EAAAC,QAAA,CAuBsC,MAAIO,MAAA,QAAAA,MAAA,OAvB1CC,gBAAA,CAuBsC,MAAI,E;UAvB1CE,CAAA;;QAAAA,CAAA;UA0BUd,YAAA,CAIcQ,sBAAA;QAJDC,KAAK,EAAC;MAAG;QACTC,KAAK,EAAAN,QAAA,CAAC,MAAIO,MAAA,QAAAA,MAAA,OA3BjCC,gBAAA,CA2B6B,MAAI,E;QA3BjCT,OAAA,EAAAC,QAAA,CA4BY,MAA6C,CAA7CJ,YAAA,CAA6Ca,uBAAA;UAA/BJ,KAAK,EAAC;QAAK;UA5BrCN,OAAA,EAAAC,QAAA,CA4BsC,MAAIO,MAAA,QAAAA,MAAA,OA5B1CC,gBAAA,CA4BsC,MAAI,E;UA5B1CE,CAAA;YA6BYd,YAAA,CAA6Ca,uBAAA;UAA/BJ,KAAK,EAAC;QAAK;UA7BrCN,OAAA,EAAAC,QAAA,CA6BsC,MAAIO,MAAA,QAAAA,MAAA,OA7B1CC,gBAAA,CA6BsC,MAAI,E;UA7B1CE,CAAA;;QAAAA,CAAA;;MAAAA,CAAA;8DAAA1B,mBAAA,e;IAAA0B,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}