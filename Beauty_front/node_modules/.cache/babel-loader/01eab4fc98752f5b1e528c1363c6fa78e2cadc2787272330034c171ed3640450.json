{"ast":null,"code":"import { ref, watch, onBeforeUnmount, shallowRef } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport '@wangeditor/editor/dist/css/style.css';\nimport { uploadFile } from '@/api/fileUpload';\nimport { ElMessage } from 'element-plus';\n\n// Props and emit\n\nexport default {\n  __name: 'RichTextEditor',\n  props: {\n    modelValue: String,\n    visible: Boolean\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n\n    // Editor instance\n    const editorRef = shallowRef();\n\n    // 初始化配置\n    const editorConfig = {\n      placeholder: '请输入内容...',\n      MENU_CONF: {\n        uploadImage: {\n          async customUpload(file, insertFn) {\n            try {\n              const res = await uploadFile(file);\n              insertFn(String(res.data), '', '');\n              ElMessage.success('图片上传成功');\n            } catch {\n              ElMessage.error('图片上传失败');\n            }\n          }\n        }\n      }\n    };\n\n    // 销毁逻辑\n    watch(() => props.visible, val => {\n      if (!val && editorRef.value) {\n        editorRef.value.destroy();\n        editorRef.value = null;\n      }\n    });\n\n    // 初始化时设置 HTML 内容\n    const handleEditorCreated = editor => {\n      editorRef.value = editor;\n      if (props.modelValue) {\n        editor.setHtml(props.modelValue);\n      }\n    };\n\n    // 每次内容变化时同步 HTML\n    const handleChange = editor => {\n      const html = editor.getHtml();\n      emit('update:modelValue', html);\n    };\n\n    // 组件销毁时清理编辑器\n    onBeforeUnmount(() => {\n      if (editorRef.value) {\n        editorRef.value.destroy();\n        editorRef.value = null;\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      editorRef,\n      editorConfig,\n      handleEditorCreated,\n      handleChange,\n      ref,\n      watch,\n      onBeforeUnmount,\n      shallowRef,\n      get Editor() {\n        return Editor;\n      },\n      get Toolbar() {\n        return Toolbar;\n      },\n      get uploadFile() {\n        return uploadFile;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onBeforeUnmount","shallowRef","Editor","Toolbar","uploadFile","ElMessage","props","__props","emit","__emit","editorRef","editorConfig","placeholder","MENU_CONF","uploadImage","customUpload","file","insertFn","res","String","data","success","error","visible","val","value","destroy","handleEditorCreated","editor","modelValue","setHtml","handleChange","html","getHtml"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/components/RichTextEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"editor-wrapper\" v-if=\"visible\">\r\n    <Toolbar v-if=\"editorRef\" :editor=\"editorRef\" mode=\"default\" />\r\n    <Editor\r\n        :defaultConfig=\"editorConfig\"\r\n        mode=\"default\"\r\n        style=\"height: 300px; width: 100%; overflow-y: auto\"\r\n        @onCreated=\"handleEditorCreated\"\r\n        @onChange=\"handleChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport {ref, watch, onBeforeUnmount, shallowRef} from 'vue'\r\nimport {Editor, Toolbar} from '@wangeditor/editor-for-vue'\r\nimport '@wangeditor/editor/dist/css/style.css'\r\nimport {uploadFile} from '@/api/fileUpload'\r\nimport {ElMessage} from 'element-plus'\r\n\r\n// Props and emit\r\nconst props = defineProps({\r\n  modelValue: String,\r\n  visible: Boolean\r\n})\r\nconst emit = defineEmits(['update:modelValue'])\r\n\r\n// Editor instance\r\nconst editorRef = shallowRef()\r\n\r\n// 初始化配置\r\nconst editorConfig = {\r\n  placeholder: '请输入内容...',\r\n  MENU_CONF: {\r\n    uploadImage: {\r\n      async customUpload(file, insertFn) {\r\n        try {\r\n          const res = await uploadFile(file)\r\n          insertFn(String(res.data), '', '')\r\n          ElMessage.success('图片上传成功')\r\n        } catch {\r\n          ElMessage.error('图片上传失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n// 销毁逻辑\r\nwatch(() => props.visible, (val) => {\r\n  if (!val && editorRef.value) {\r\n    editorRef.value.destroy()\r\n    editorRef.value = null\r\n  }\r\n})\r\n\r\n// 初始化时设置 HTML 内容\r\nconst handleEditorCreated = (editor) => {\r\n  editorRef.value = editor\r\n  if (props.modelValue) {\r\n    editor.setHtml(props.modelValue)\r\n  }\r\n}\r\n\r\n// 每次内容变化时同步 HTML\r\nconst handleChange = (editor) => {\r\n  const html = editor.getHtml()\r\n  emit('update:modelValue', html)\r\n}\r\n\r\n// 组件销毁时清理编辑器\r\nonBeforeUnmount(() => {\r\n  if (editorRef.value) {\r\n    editorRef.value.destroy()\r\n    editorRef.value = null\r\n  }\r\n})\r\n</script>\r\n"],"mappings":"AAcA,SAAQA,GAAG,EAAEC,KAAK,EAAEC,eAAe,EAAEC,UAAU,QAAO,KAAK;AAC3D,SAAQC,MAAM,EAAEC,OAAO,QAAO,4BAA4B;AAC1D,OAAO,uCAAuC;AAC9C,SAAQC,UAAU,QAAO,kBAAkB;AAC3C,SAAQC,SAAS,QAAO,cAAc;;AAEtC;;;;;;;;;;;;;;IACA,MAAMC,KAAK,GAAGC,OAGZ;IACF,MAAMC,IAAI,GAAGC,MAAkC;;IAE/C;IACA,MAAMC,SAAS,GAAGT,UAAU,CAAC,CAAC;;IAE9B;IACA,MAAMU,YAAY,GAAG;MACnBC,WAAW,EAAE,UAAU;MACvBC,SAAS,EAAE;QACTC,WAAW,EAAE;UACX,MAAMC,YAAYA,CAACC,IAAI,EAAEC,QAAQ,EAAE;YACjC,IAAI;cACF,MAAMC,GAAG,GAAG,MAAMd,UAAU,CAACY,IAAI,CAAC;cAClCC,QAAQ,CAACE,MAAM,CAACD,GAAG,CAACE,IAAI,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;cAClCf,SAAS,CAACgB,OAAO,CAAC,QAAQ,CAAC;YAC7B,CAAC,CAAC,MAAM;cACNhB,SAAS,CAACiB,KAAK,CAAC,QAAQ,CAAC;YAC3B;UACF;QACF;MACF;IACF,CAAC;;IAED;IACAvB,KAAK,CAAC,MAAMO,KAAK,CAACiB,OAAO,EAAGC,GAAG,IAAK;MAClC,IAAI,CAACA,GAAG,IAAId,SAAS,CAACe,KAAK,EAAE;QAC3Bf,SAAS,CAACe,KAAK,CAACC,OAAO,CAAC,CAAC;QACzBhB,SAAS,CAACe,KAAK,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;;IAEF;IACA,MAAME,mBAAmB,GAAIC,MAAM,IAAK;MACtClB,SAAS,CAACe,KAAK,GAAGG,MAAM;MACxB,IAAItB,KAAK,CAACuB,UAAU,EAAE;QACpBD,MAAM,CAACE,OAAO,CAACxB,KAAK,CAACuB,UAAU,CAAC;MAClC;IACF,CAAC;;IAED;IACA,MAAME,YAAY,GAAIH,MAAM,IAAK;MAC/B,MAAMI,IAAI,GAAGJ,MAAM,CAACK,OAAO,CAAC,CAAC;MAC7BzB,IAAI,CAAC,mBAAmB,EAAEwB,IAAI,CAAC;IACjC,CAAC;;IAED;IACAhC,eAAe,CAAC,MAAM;MACpB,IAAIU,SAAS,CAACe,KAAK,EAAE;QACnBf,SAAS,CAACe,KAAK,CAACC,OAAO,CAAC,CAAC;QACzBhB,SAAS,CAACe,KAAK,GAAG,IAAI;MACxB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}