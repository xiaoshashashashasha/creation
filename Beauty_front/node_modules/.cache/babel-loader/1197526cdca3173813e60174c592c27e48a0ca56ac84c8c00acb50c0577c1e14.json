{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { uploadFile } from '@/api/fileUpload';\nimport { addCreation, creationClassList } from '@/api/creation'; // 引入分类 API\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  __name: 'CreateCreationPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      title: '',\n      abs_text: '',\n      cover_pic: '',\n      content: '',\n      class_id: null // 初始为空\n    });\n    const classOptions = ref([]); // 分类选项\n\n    const loading = ref(false);\n    const handleUpload = async ({\n      file\n    }) => {\n      try {\n        const res = await uploadFile(file);\n        form.value.cover_pic = res.data;\n        ElMessage.success('上传成功');\n      } catch {\n        ElMessage.error('上传失败');\n      }\n    };\n    const handleSubmit = async () => {\n      if (!form.value.title || !form.value.abs_text || !form.value.cover_pic || !form.value.content || !form.value.class_id) {\n        return ElMessage.warning('请完整填写所有信息');\n      }\n      loading.value = true;\n      try {\n        await addCreation({\n          ...form.value\n        });\n        ElMessage.success('发布成功');\n        router.back();\n      } catch (err) {\n        ElMessage.error('发布失败');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const fetchClassOptions = async () => {\n      try {\n        const res = await creationClassList({\n          pageNum: 1,\n          pageSize: 100\n        });\n        classOptions.value = res.data.items || [];\n      } catch (err) {\n        ElMessage.error('获取分类失败');\n      }\n    };\n    onMounted(() => {\n      fetchClassOptions();\n    });\n    const __returned__ = {\n      router,\n      form,\n      classOptions,\n      loading,\n      handleUpload,\n      handleSubmit,\n      fetchClassOptions,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get uploadFile() {\n        return uploadFile;\n      },\n      get addCreation() {\n        return addCreation;\n      },\n      get creationClassList() {\n        return creationClassList;\n      },\n      RichTextEditor\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","uploadFile","addCreation","creationClassList","RichTextEditor","router","form","title","abs_text","cover_pic","content","class_id","classOptions","loading","handleUpload","file","res","value","data","success","error","handleSubmit","warning","back","err","fetchClassOptions","pageNum","pageSize","items"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/views/CreateCreationPage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { uploadFile } from '@/api/fileUpload'\r\nimport { addCreation, creationClassList } from '@/api/creation' // 引入分类 API\r\nimport RichTextEditor from '@/components/RichTextEditor.vue'\r\n\r\nconst router = useRouter()\r\n\r\nconst form = ref({\r\n  title: '',\r\n  abs_text: '',\r\n  cover_pic: '',\r\n  content: '',\r\n  class_id: null // 初始为空\r\n})\r\n\r\nconst classOptions = ref([]) // 分类选项\r\n\r\nconst loading = ref(false)\r\n\r\nconst handleUpload = async ({ file }) => {\r\n  try {\r\n    const res = await uploadFile(file)\r\n    form.value.cover_pic = res.data\r\n    ElMessage.success('上传成功')\r\n  } catch {\r\n    ElMessage.error('上传失败')\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  if (!form.value.title || !form.value.abs_text || !form.value.cover_pic || !form.value.content || !form.value.class_id) {\r\n    return ElMessage.warning('请完整填写所有信息')\r\n  }\r\n  loading.value = true\r\n  try {\r\n    await addCreation({ ...form.value })\r\n    ElMessage.success('发布成功')\r\n    router.back()\r\n  } catch (err) {\r\n    ElMessage.error('发布失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst fetchClassOptions = async () => {\r\n  try {\r\n    const res = await creationClassList({ pageNum: 1, pageSize: 100 })\r\n    classOptions.value = res.data.items || []\r\n  } catch (err) {\r\n    ElMessage.error('获取分类失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchClassOptions()\r\n})\r\n\r\n</script>\r\n\r\n<template>\r\n  <div class=\"creation-page\">\r\n    <div class=\"header\">\r\n      <el-button icon=\"el-icon-arrow-left\" @click=\"router.back()\">返回</el-button>\r\n    </div>\r\n\r\n    <div class=\"form-section\">\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"封面\">\r\n          <div class=\"upload-box\">\r\n            <img v-if=\"form.cover_pic\" :src=\"form.cover_pic\" class=\"cover-img\" />\r\n            <el-upload :http-request=\"handleUpload\" :show-file-list=\"false\" accept=\"image/*\">\r\n              <el-button type=\"primary\">上传封面</el-button>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"分类\">\r\n          <el-select v-model=\"form.class_id\" placeholder=\"请选择分类\" style=\"width: 120px\">\r\n            <el-option\r\n                v-for=\"cls in classOptions\"\r\n                :key=\"cls.class_id\"\r\n                :label=\"cls.class_name\"\r\n                :value=\"cls.class_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"标题\">\r\n          <el-input v-model=\"form.title\" placeholder=\"1~10字\" maxlength=\"10\" show-word-limit />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"摘要\">\r\n          <el-input v-model=\"form.abs_text\" placeholder=\"1~30字\" maxlength=\"30\" show-word-limit />\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"editor-section\">\r\n      <RichTextEditor v-model=\"form.content\" :visible=\"true\" />\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <el-button type=\"success\" @click=\"handleSubmit\" :loading=\"loading\">发布</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.creation-page {\r\n  max-width: 1080px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.upload-box {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.cover-img {\r\n  width: 200px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.editor-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.submit-btn {\r\n  text-align: center;\r\n  margin-top: 30px;\r\n}\r\n</style>\r\n"],"mappings":"AACA,SAASA,GAAG,EAAEC,SAAS,QAAQ,KAAK;AACpC,SAASC,SAAS,QAAQ,YAAY;AACtC,SAASC,SAAS,QAAQ,cAAc;AACxC,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,WAAW,EAAEC,iBAAiB,QAAQ,gBAAgB,EAAC;AAChE,OAAOC,cAAc,MAAM,iCAAiC;;;;;;;IAE5D,MAAMC,MAAM,GAAGN,SAAS,CAAC,CAAC;IAE1B,MAAMO,IAAI,GAAGT,GAAG,CAAC;MACfU,KAAK,EAAE,EAAE;MACTC,QAAQ,EAAE,EAAE;MACZC,SAAS,EAAE,EAAE;MACbC,OAAO,EAAE,EAAE;MACXC,QAAQ,EAAE,IAAI,CAAC;IACjB,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGf,GAAG,CAAC,EAAE,CAAC,EAAC;;IAE7B,MAAMgB,OAAO,GAAGhB,GAAG,CAAC,KAAK,CAAC;IAE1B,MAAMiB,YAAY,GAAG,MAAAA,CAAO;MAAEC;IAAK,CAAC,KAAK;MACvC,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMf,UAAU,CAACc,IAAI,CAAC;QAClCT,IAAI,CAACW,KAAK,CAACR,SAAS,GAAGO,GAAG,CAACE,IAAI;QAC/BlB,SAAS,CAACmB,OAAO,CAAC,MAAM,CAAC;MAC3B,CAAC,CAAC,MAAM;QACNnB,SAAS,CAACoB,KAAK,CAAC,MAAM,CAAC;MACzB;IACF,CAAC;IAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI,CAACf,IAAI,CAACW,KAAK,CAACV,KAAK,IAAI,CAACD,IAAI,CAACW,KAAK,CAACT,QAAQ,IAAI,CAACF,IAAI,CAACW,KAAK,CAACR,SAAS,IAAI,CAACH,IAAI,CAACW,KAAK,CAACP,OAAO,IAAI,CAACJ,IAAI,CAACW,KAAK,CAACN,QAAQ,EAAE;QACrH,OAAOX,SAAS,CAACsB,OAAO,CAAC,WAAW,CAAC;MACvC;MACAT,OAAO,CAACI,KAAK,GAAG,IAAI;MACpB,IAAI;QACF,MAAMf,WAAW,CAAC;UAAE,GAAGI,IAAI,CAACW;QAAM,CAAC,CAAC;QACpCjB,SAAS,CAACmB,OAAO,CAAC,MAAM,CAAC;QACzBd,MAAM,CAACkB,IAAI,CAAC,CAAC;MACf,CAAC,CAAC,OAAOC,GAAG,EAAE;QACZxB,SAAS,CAACoB,KAAK,CAAC,MAAM,CAAC;MACzB,CAAC,SAAS;QACRP,OAAO,CAACI,KAAK,GAAG,KAAK;MACvB;IACF,CAAC;IAED,MAAMQ,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMT,GAAG,GAAG,MAAMb,iBAAiB,CAAC;UAAEuB,OAAO,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAI,CAAC,CAAC;QAClEf,YAAY,CAACK,KAAK,GAAGD,GAAG,CAACE,IAAI,CAACU,KAAK,IAAI,EAAE;MAC3C,CAAC,CAAC,OAAOJ,GAAG,EAAE;QACZxB,SAAS,CAACoB,KAAK,CAAC,QAAQ,CAAC;MAC3B;IACF,CAAC;IAEDtB,SAAS,CAAC,MAAM;MACd2B,iBAAiB,CAAC,CAAC;IACrB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}