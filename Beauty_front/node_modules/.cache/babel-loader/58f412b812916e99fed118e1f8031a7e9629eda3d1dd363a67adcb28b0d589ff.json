{"ast":null,"code":"import { ref, onMounted } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { ElMessage } from 'element-plus';\nimport { uploadFile } from '@/api/fileUpload';\nimport { addCreation, creationClassList } from '@/api/creation';\nimport RichTextEditor from '@/components/RichTextEditor.vue';\nexport default {\n  __name: 'CreateCreationPage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const router = useRouter();\n    const form = ref({\n      title: '',\n      abs_text: '',\n      cover_pic: '',\n      content: '<p><br></p>',\n      class_id: null\n    });\n    const classOptions = ref([]);\n    const loading = ref(false);\n    const handleUpload = async ({\n      file\n    }) => {\n      try {\n        const res = await uploadFile(file);\n        form.value.cover_pic = res.data;\n        ElMessage.success('‰∏ä‰º†ÊàêÂäü');\n      } catch {\n        ElMessage.error('‰∏ä‰º†Â§±Ë¥•');\n      }\n    };\n    const handleSubmit = async () => {\n      const {\n        title,\n        abs_text,\n        cover_pic,\n        content,\n        class_id\n      } = form.value;\n      const isEmptyContent = !content || content.trim() === '' || content === '<p><br></p>';\n      if (!title || !abs_text || !cover_pic || isEmptyContent || !class_id) {\n        return ElMessage.warning('ËØ∑ÂÆåÊï¥Â°´ÂÜôÊâÄÊúâ‰ø°ÊÅØ');\n      }\n      loading.value = true;\n      try {\n        console.log('üìù Êèê‰∫§ÂÜÖÂÆπ:', form.value);\n        await addCreation({\n          ...form.value\n        });\n        ElMessage.success('ÂèëÂ∏ÉÊàêÂäü');\n        router.back();\n      } catch (err) {\n        ElMessage.error('ÂèëÂ∏ÉÂ§±Ë¥•');\n      } finally {\n        loading.value = false;\n      }\n    };\n    const fetchClassOptions = async () => {\n      try {\n        const res = await creationClassList({\n          pageNum: 1,\n          pageSize: 100\n        });\n        classOptions.value = res.data.items || [];\n\n        // ÈªòËÆ§ÈÄâÊã©Á¨¨‰∏Ä‰∏™ÂàÜÁ±ª\n        if (!form.value.class_id && classOptions.value.length > 0) {\n          form.value.class_id = classOptions.value[0].class_id;\n        }\n      } catch (err) {\n        ElMessage.error('Ëé∑ÂèñÂàÜÁ±ªÂ§±Ë¥•');\n      }\n    };\n    onMounted(() => {\n      fetchClassOptions();\n    });\n    const __returned__ = {\n      router,\n      form,\n      classOptions,\n      loading,\n      handleUpload,\n      handleSubmit,\n      fetchClassOptions,\n      ref,\n      onMounted,\n      get useRouter() {\n        return useRouter;\n      },\n      get ElMessage() {\n        return ElMessage;\n      },\n      get uploadFile() {\n        return uploadFile;\n      },\n      get addCreation() {\n        return addCreation;\n      },\n      get creationClassList() {\n        return creationClassList;\n      },\n      RichTextEditor\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","useRouter","ElMessage","uploadFile","addCreation","creationClassList","RichTextEditor","router","form","title","abs_text","cover_pic","content","class_id","classOptions","loading","handleUpload","file","res","value","data","success","error","handleSubmit","isEmptyContent","trim","warning","console","log","back","err","fetchClassOptions","pageNum","pageSize","items","length"],"sources":["C:/Users/32561/Desktop/ÊØïËÆæ‰ªìÂ∫ì/beauty-front/src/views/CreateCreationPage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { uploadFile } from '@/api/fileUpload'\r\nimport { addCreation, creationClassList } from '@/api/creation'\r\nimport RichTextEditor from '@/components/RichTextEditor.vue'\r\n\r\nconst router = useRouter()\r\n\r\nconst form = ref({\r\n  title: '',\r\n  abs_text: '',\r\n  cover_pic: '',\r\n  content: '<p><br></p>',\r\n  class_id: null\r\n})\r\n\r\nconst classOptions = ref([])\r\nconst loading = ref(false)\r\n\r\nconst handleUpload = async ({ file }) => {\r\n  try {\r\n    const res = await uploadFile(file)\r\n    form.value.cover_pic = res.data\r\n    ElMessage.success('‰∏ä‰º†ÊàêÂäü')\r\n  } catch {\r\n    ElMessage.error('‰∏ä‰º†Â§±Ë¥•')\r\n  }\r\n}\r\n\r\nconst handleSubmit = async () => {\r\n  const { title, abs_text, cover_pic, content, class_id } = form.value\r\n  const isEmptyContent = !content || content.trim() === '' || content === '<p><br></p>'\r\n\r\n  if (!title || !abs_text || !cover_pic || isEmptyContent || !class_id) {\r\n    return ElMessage.warning('ËØ∑ÂÆåÊï¥Â°´ÂÜôÊâÄÊúâ‰ø°ÊÅØ')\r\n  }\r\n\r\n  loading.value = true\r\n  try {\r\n    console.log('üìù Êèê‰∫§ÂÜÖÂÆπ:', form.value)\r\n    await addCreation({ ...form.value })\r\n    ElMessage.success('ÂèëÂ∏ÉÊàêÂäü')\r\n    router.back()\r\n  } catch (err) {\r\n    ElMessage.error('ÂèëÂ∏ÉÂ§±Ë¥•')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\nconst fetchClassOptions = async () => {\r\n  try {\r\n    const res = await creationClassList({ pageNum: 1, pageSize: 100 })\r\n    classOptions.value = res.data.items || []\r\n\r\n    // ÈªòËÆ§ÈÄâÊã©Á¨¨‰∏Ä‰∏™ÂàÜÁ±ª\r\n    if (!form.value.class_id && classOptions.value.length > 0) {\r\n      form.value.class_id = classOptions.value[0].class_id\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('Ëé∑ÂèñÂàÜÁ±ªÂ§±Ë¥•')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchClassOptions()\r\n})\r\n</script>\r\n\r\n\r\n<template>\r\n  <div class=\"creation-page\">\r\n    <div class=\"header\">\r\n      <el-button icon=\"el-icon-arrow-left\" @click=\"router.back()\">ËøîÂõû</el-button>\r\n    </div>\r\n\r\n    <div class=\"form-section\">\r\n      <el-form :model=\"form\" label-width=\"80px\">\r\n        <el-form-item label=\"Â∞ÅÈù¢\">\r\n          <div class=\"upload-box\">\r\n            <img v-if=\"form.cover_pic\" :src=\"form.cover_pic\" class=\"cover-img\" />\r\n            <el-upload :http-request=\"handleUpload\" :show-file-list=\"false\" accept=\"image/*\">\r\n              <el-button type=\"primary\">‰∏ä‰º†Â∞ÅÈù¢</el-button>\r\n            </el-upload>\r\n          </div>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"ÂàÜÁ±ª\">\r\n          <el-select v-model=\"form.class_id\" placeholder=\"ËØ∑ÈÄâÊã©ÂàÜÁ±ª\" style=\"width: 160px\">\r\n            <el-option\r\n                v-for=\"cls in classOptions\"\r\n                :key=\"cls.class_id\"\r\n                :label=\"cls.class_name\"\r\n                :value=\"cls.class_id\"\r\n            />\r\n          </el-select>\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"Ê†áÈ¢ò\">\r\n          <el-input v-model=\"form.title\" placeholder=\"1~10Â≠ó\" maxlength=\"10\" show-word-limit />\r\n        </el-form-item>\r\n\r\n        <el-form-item label=\"ÊëòË¶Å\">\r\n          <el-input v-model=\"form.abs_text\" placeholder=\"1~30Â≠ó\" maxlength=\"30\" show-word-limit />\r\n        </el-form-item>\r\n      </el-form>\r\n    </div>\r\n\r\n    <div class=\"editor-section\">\r\n      <RichTextEditor v-model=\"form.content\" :visible=\"true\" />\r\n    </div>\r\n\r\n    <div class=\"submit-btn\">\r\n      <el-button type=\"success\" @click=\"handleSubmit\" :loading=\"loading\">ÂèëÂ∏É</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.creation-page {\r\n  max-width: 1080px;\r\n  margin: 0 auto;\r\n  padding: 20px;\r\n  background-color: #fff;\r\n  border-radius: 12px;\r\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);\r\n}\r\n\r\n.header {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.upload-box {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 20px;\r\n}\r\n\r\n.cover-img {\r\n  width: 200px;\r\n  height: 120px;\r\n  object-fit: cover;\r\n  border-radius: 4px;\r\n  border: 1px solid #eee;\r\n}\r\n\r\n.form-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.editor-section {\r\n  margin-bottom: 30px;\r\n}\r\n\r\n.submit-btn {\r\n  text-align: center;\r\n  margin-top: 30px;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}