{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementBlock as _createElementBlock, resolveDirective as _resolveDirective, withDirectives as _withDirectives } from \"vue\";\nconst _hoisted_1 = {\n  class: \"main-content\"\n};\nconst _hoisted_2 = {\n  key: 1,\n  style: {\n    \"color\": \"#999\"\n  }\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_button = _resolveComponent(\"el-button\");\n  const _component_el_avatar = _resolveComponent(\"el-avatar\");\n  const _component_el_table_column = _resolveComponent(\"el-table-column\");\n  const _component_el_badge = _resolveComponent(\"el-badge\");\n  const _component_el_table = _resolveComponent(\"el-table\");\n  const _directive_loading = _resolveDirective(\"loading\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_el_button, {\n    class: \"back-btn\",\n    type: \"primary\",\n    plain: \"\",\n    onClick: _cache[0] || (_cache[0] = () => $setup.router.push('/'))\n  }, {\n    default: _withCtx(() => _cache[2] || (_cache[2] = [_createTextVNode(\" 返回首页 \")])),\n    _: 1 /* STABLE */\n  }), _cache[4] || (_cache[4] = _createElementVNode(\"div\", {\n    class: \"section-title\"\n  }, \"我的消息\", -1 /* HOISTED */)), _withDirectives((_openBlock(), _createBlock(_component_el_table, {\n    data: $setup.chatList,\n    style: {\n      \"width\": \"100%\"\n    },\n    onRowClick: _cache[1] || (_cache[1] = row => $setup.handleChatClick(row.targetId))\n  }, {\n    default: _withCtx(() => [_createVNode(_component_el_table_column, {\n      label: \"头像\",\n      width: \"100\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createVNode(_component_el_avatar, {\n        src: row.user_pic,\n        size: \"large\"\n      }, {\n        default: _withCtx(() => [_createTextVNode(_toDisplayString(row.nickname ? row.nickname[0] : '?'), 1 /* TEXT */)]),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"src\"])]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"昵称\",\n      prop: \"nickname\",\n      width: \"180\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"最新消息\",\n      prop: \"lastMessage\",\n      \"min-width\": \"300\"\n    }), _createVNode(_component_el_table_column, {\n      label: \"时间\",\n      prop: \"lastTime\",\n      width: \"180\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [_createTextVNode(_toDisplayString(row.lastTime ? new Date(row.lastTime).toLocaleString() : ''), 1 /* TEXT */)]),\n      _: 1 /* STABLE */\n    }), _createVNode(_component_el_table_column, {\n      label: \"未读数\",\n      prop: \"unReadCount\",\n      width: \"100\"\n    }, {\n      default: _withCtx(({\n        row\n      }) => [row.unReadCount > 0 ? (_openBlock(), _createBlock(_component_el_badge, {\n        key: 0,\n        value: row.unReadCount,\n        max: 99\n      }, {\n        default: _withCtx(() => _cache[3] || (_cache[3] = [_createElementVNode(\"span\", {\n          style: {\n            \"color\": \"#409EFF\"\n          }\n        }, \"未读\", -1 /* HOISTED */)])),\n        _: 2 /* DYNAMIC */\n      }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\"])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_2, \"已读\"))]),\n      _: 1 /* STABLE */\n    })]),\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"data\"])), [[_directive_loading, $setup.loading]])]);\n}","map":{"version":3,"names":["class","key","style","_createElementBlock","_hoisted_1","_createVNode","_component_el_button","type","plain","onClick","_cache","$setup","router","push","default","_withCtx","_createTextVNode","_","_createElementVNode","_createBlock","_component_el_table","data","chatList","onRowClick","row","handleChatClick","targetId","_component_el_table_column","label","width","_component_el_avatar","src","user_pic","size","_toDisplayString","nickname","prop","lastTime","Date","toLocaleString","unReadCount","_component_el_badge","value","max","_hoisted_2","loading"],"sources":["C:\\Users\\32561\\Desktop\\毕设仓库\\beauty-front\\src\\views\\Mine\\MyMessage.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport { ElMessage } from 'element-plus'\r\nimport { getChatList } from '@/api/prMessage'\r\nimport { userOtherInfoService } from '@/api/user' // 获取昵称头像的接口\r\n\r\nconst router = useRouter()\r\nconst chatList = ref([]) // 聊天列表\r\nconst loading = ref(false)\r\n\r\nconst fetchChatList = async () => {\r\n  loading.value = true\r\n  try {\r\n    const res = await getChatList()\r\n    if (res.data.code === 200) {\r\n      const tempList = res.data.data || []\r\n\r\n      // 批量请求每个聊天对象的基本资料\r\n      for (const item of tempList) {\r\n        try {\r\n          const userInfoRes = await userOtherInfoService(item.targetId)\r\n          if (userInfoRes.data.code === 200) {\r\n            item.nickname = userInfoRes.data.data.nickname\r\n            item.user_pic = userInfoRes.data.data.user_pic\r\n          } else {\r\n            item.nickname = '未知用户'\r\n            item.user_pic = ''\r\n          }\r\n        } catch (e) {\r\n          item.nickname = '未知用户'\r\n          item.user_pic = ''\r\n        }\r\n      }\r\n\r\n      chatList.value = tempList\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error(err.msg || '获取消息列表失败')\r\n  } finally {\r\n    loading.value = false\r\n  }\r\n}\r\n\r\n// 点击聊天\r\nconst handleChatClick = (targetId) => {\r\n  router.push({ name: 'ChatDetail', params: { targetId } })\r\n}\r\n\r\nonMounted(() => {\r\n  fetchChatList()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main-content\">\r\n    <el-button class=\"back-btn\" type=\"primary\" plain @click=\"() => router.push('/')\">\r\n      返回首页\r\n    </el-button>\r\n\r\n    <div class=\"section-title\">我的消息</div>\r\n\r\n    <el-table\r\n        v-loading=\"loading\"\r\n        :data=\"chatList\"\r\n        style=\"width: 100%;\"\r\n        @row-click=\"row => handleChatClick(row.targetId)\"\r\n    >\r\n      <el-table-column label=\"头像\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-avatar :src=\"row.user_pic\" size=\"large\">\r\n            {{ row.nickname ? row.nickname[0] : '?' }}\r\n          </el-avatar>\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"昵称\" prop=\"nickname\" width=\"180\" />\r\n\r\n      <el-table-column label=\"最新消息\" prop=\"lastMessage\" min-width=\"300\" />\r\n\r\n      <el-table-column label=\"时间\" prop=\"lastTime\" width=\"180\">\r\n        <template #default=\"{ row }\">\r\n          {{ row.lastTime ? new Date(row.lastTime).toLocaleString() : '' }}\r\n        </template>\r\n      </el-table-column>\r\n\r\n      <el-table-column label=\"未读数\" prop=\"unReadCount\" width=\"100\">\r\n        <template #default=\"{ row }\">\r\n          <el-badge :value=\"row.unReadCount\" :max=\"99\" v-if=\"row.unReadCount > 0\">\r\n            <span style=\"color: #409EFF;\">未读</span>\r\n          </el-badge>\r\n          <span v-else style=\"color: #999;\">已读</span>\r\n        </template>\r\n      </el-table-column>\r\n\r\n    </el-table>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.main-content {\r\n  flex: 1;\r\n  width: 1720px;\r\n  height: 765px;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n  background: #f5f7fa;\r\n  padding: 20px;\r\n}\r\n\r\n.section-title {\r\n  font-size: 20px;\r\n  font-weight: bold;\r\n  background-color: #eef1f6;\r\n  padding: 10px 15px;\r\n  border-left: 5px solid #409EFF;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.back-btn {\r\n  margin-bottom: 20px;\r\n}\r\n</style>\r\n"],"mappings":";;;EAuDOA,KAAK,EAAC;AAAc;;EAvD3BC,GAAA;EA2FuBC,KAAoB,EAApB;IAAA;EAAA;;;;;;;;;uBApCrBC,mBAAA,CAyCM,OAzCNC,UAyCM,GAxCJC,YAAA,CAEYC,oBAAA;IAFDN,KAAK,EAAC,UAAU;IAACO,IAAI,EAAC,SAAS;IAACC,KAAK,EAAL,EAAK;IAAEC,OAAK,EAAAC,MAAA,QAAAA,MAAA,YAAQC,MAAA,CAAAC,MAAM,CAACC,IAAI;;IAxD9EC,OAAA,EAAAC,QAAA,CAwDqF,MAEjFL,MAAA,QAAAA,MAAA,OA1DJM,gBAAA,CAwDqF,QAEjF,E;IA1DJC,CAAA;gCA4DIC,mBAAA,CAAqC;IAAhClB,KAAK,EAAC;EAAe,GAAC,MAAI,sB,+BAE/BmB,YAAA,CAiCWC,mBAAA;IA/BNC,IAAI,EAAEV,MAAA,CAAAW,QAAQ;IACfpB,KAAoB,EAApB;MAAA;IAAA,CAAoB;IACnBqB,UAAS,EAAAb,MAAA,QAAAA,MAAA,MAAEc,GAAG,IAAIb,MAAA,CAAAc,eAAe,CAACD,GAAG,CAACE,QAAQ;;IAlEvDZ,OAAA,EAAAC,QAAA,CAoEM,MAMkB,CANlBV,YAAA,CAMkBsB,0BAAA;MANDC,KAAK,EAAC,IAAI;MAACC,KAAK,EAAC;;MACrBf,OAAO,EAAAC,QAAA,CAChB,CAEY;QAHQS;MAAG,OACvBnB,YAAA,CAEYyB,oBAAA;QAFAC,GAAG,EAAEP,GAAG,CAACQ,QAAQ;QAAEC,IAAI,EAAC;;QAtE9CnB,OAAA,EAAAC,QAAA,CAuEY,MAA0C,CAvEtDC,gBAAA,CAAAkB,gBAAA,CAuEeV,GAAG,CAACW,QAAQ,GAAGX,GAAG,CAACW,QAAQ,0B;QAvE1ClB,CAAA;;MAAAA,CAAA;QA4EMZ,YAAA,CAA0DsB,0BAAA;MAAzCC,KAAK,EAAC,IAAI;MAACQ,IAAI,EAAC,UAAU;MAACP,KAAK,EAAC;QAElDxB,YAAA,CAAmEsB,0BAAA;MAAlDC,KAAK,EAAC,MAAM;MAACQ,IAAI,EAAC,aAAa;MAAC,WAAS,EAAC;QAE3D/B,YAAA,CAIkBsB,0BAAA;MAJDC,KAAK,EAAC,IAAI;MAACQ,IAAI,EAAC,UAAU;MAACP,KAAK,EAAC;;MACrCf,OAAO,EAAAC,QAAA,CAChB,CAAiE;QAD7CS;MAAG,OAjFjCR,gBAAA,CAAAkB,gBAAA,CAkFaV,GAAG,CAACa,QAAQ,OAAOC,IAAI,CAACd,GAAG,CAACa,QAAQ,EAAEE,cAAc,wB;MAlFjEtB,CAAA;QAsFMZ,YAAA,CAOkBsB,0BAAA;MAPDC,KAAK,EAAC,KAAK;MAACQ,IAAI,EAAC,aAAa;MAACP,KAAK,EAAC;;MACzCf,OAAO,EAAAC,QAAA,CAChB,CAEW;QAHSS;MAAG,OAC4BA,GAAG,CAACgB,WAAW,Q,cAAlErB,YAAA,CAEWsB,mBAAA;QA1FrBxC,GAAA;QAwFqByC,KAAK,EAAElB,GAAG,CAACgB,WAAW;QAAGG,GAAG,EAAE;;QAxFnD7B,OAAA,EAAAC,QAAA,CAyFY,MAAuCL,MAAA,QAAAA,MAAA,OAAvCQ,mBAAA,CAAuC;UAAjChB,KAAuB,EAAvB;YAAA;UAAA;QAAuB,GAAC,IAAE,oB;QAzF5Ce,CAAA;uEA2FUd,mBAAA,CAA2C,QAA3CyC,UAA2C,EAAT,IAAE,G;MA3F9C3B,CAAA;;IAAAA,CAAA;sDA+DmBN,MAAA,CAAAkC,OAAO,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}