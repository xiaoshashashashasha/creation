{"ast":null,"code":"import { ref, watch, onBeforeUnmount } from 'vue';\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue';\nimport '@wangeditor/editor/dist/css/style.css';\nimport { uploadFile } from '@/api/fileUpload';\nimport { ElMessage } from 'element-plus';\nexport default {\n  __name: 'RichTextEditor',\n  props: {\n    modelValue: String,\n    visible: Boolean\n  },\n  emits: ['update:modelValue'],\n  setup(__props, {\n    expose: __expose,\n    emit: __emit\n  }) {\n    __expose();\n    const props = __props;\n    const emit = __emit;\n    const editorRef = ref(null);\n    const handleCreated = editor => {\n      editorRef.value = editor;\n    };\n    const editorConfig = {\n      placeholder: '请输入内容...',\n      MENU_CONF: {\n        uploadImage: {\n          async customUpload(file, insertFn) {\n            try {\n              const res = await uploadFile(file);\n              const url = res.data;\n              insertFn(String(url), '', '');\n              ElMessage.success('图片上传成功');\n            } catch (err) {\n              ElMessage.error('图片上传失败');\n            }\n          }\n        }\n      }\n    };\n    watch(() => props.modelValue, val => {\n      // 内容变化时更新编辑器内容（双向绑定已经处理了，通常可省略）\n    });\n    watch(() => props.visible, val => {\n      if (!val && editorRef.value) {\n        editorRef.value.destroy();\n        editorRef.value = null;\n      }\n    });\n    onBeforeUnmount(() => {\n      if (editorRef.value) {\n        editorRef.value.destroy();\n        editorRef.value = null;\n      }\n    });\n    const __returned__ = {\n      props,\n      emit,\n      editorRef,\n      handleCreated,\n      editorConfig,\n      ref,\n      watch,\n      onBeforeUnmount,\n      get Editor() {\n        return Editor;\n      },\n      get Toolbar() {\n        return Toolbar;\n      },\n      get uploadFile() {\n        return uploadFile;\n      },\n      get ElMessage() {\n        return ElMessage;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","watch","onBeforeUnmount","Editor","Toolbar","uploadFile","ElMessage","props","__props","emit","__emit","editorRef","handleCreated","editor","value","editorConfig","placeholder","MENU_CONF","uploadImage","customUpload","file","insertFn","res","url","data","String","success","err","error","modelValue","val","visible","destroy"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/components/RichTextEditor.vue"],"sourcesContent":["<template>\r\n  <div class=\"editor-wrapper\" v-if=\"visible\">\r\n    <Toolbar :editor=\"editorRef\" mode=\"default\" />\r\n    <Editor\r\n        v-model=\"modelValue\"\r\n        :defaultConfig=\"editorConfig\"\r\n        mode=\"default\"\r\n        style=\"height: 300px; width: 100%; overflow-y: auto\"\r\n        @onCreated=\"handleCreated\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, watch, onBeforeUnmount } from 'vue'\r\nimport { Editor, Toolbar } from '@wangeditor/editor-for-vue'\r\nimport '@wangeditor/editor/dist/css/style.css'\r\nimport { uploadFile } from '@/api/fileUpload'\r\nimport { ElMessage } from 'element-plus'\r\n\r\nconst props = defineProps({\r\n  modelValue: String,\r\n  visible: Boolean\r\n})\r\nconst emit = defineEmits(['update:modelValue'])\r\n\r\nconst editorRef = ref(null)\r\n\r\nconst handleCreated = (editor) => {\r\n  editorRef.value = editor\r\n}\r\n\r\nconst editorConfig = {\r\n  placeholder: '请输入内容...',\r\n  MENU_CONF: {\r\n    uploadImage: {\r\n      async customUpload(file, insertFn) {\r\n        try {\r\n          const res = await uploadFile(file)\r\n          const url = res.data\r\n          insertFn(String(url), '', '')\r\n          ElMessage.success('图片上传成功')\r\n        } catch (err) {\r\n          ElMessage.error('图片上传失败')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nwatch(() => props.modelValue, (val) => {\r\n  // 内容变化时更新编辑器内容（双向绑定已经处理了，通常可省略）\r\n})\r\n\r\nwatch(() => props.visible, (val) => {\r\n  if (!val && editorRef.value) {\r\n    editorRef.value.destroy()\r\n    editorRef.value = null\r\n  }\r\n})\r\n\r\nonBeforeUnmount(() => {\r\n  if (editorRef.value) {\r\n    editorRef.value.destroy()\r\n    editorRef.value = null\r\n  }\r\n})\r\n</script>\r\n\r\n<style scoped>\r\n.editor-wrapper {\r\n  border: 1px solid #dcdfe6;\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  margin-top: 10px;\r\n}\r\n\r\n.w-e-text-container {\r\n  min-height: 200px;\r\n  padding: 10px;\r\n}\r\n\r\n.w-e-text img {\r\n  max-width: 100%;\r\n  height: auto;\r\n  display: block;\r\n  margin: 10px 0;\r\n}\r\n</style>\r\n"],"mappings":"AAcA,SAASA,GAAG,EAAEC,KAAK,EAAEC,eAAe,QAAQ,KAAK;AACjD,SAASC,MAAM,EAAEC,OAAO,QAAQ,4BAA4B;AAC5D,OAAO,uCAAuC;AAC9C,SAASC,UAAU,QAAQ,kBAAkB;AAC7C,SAASC,SAAS,QAAQ,cAAc;;;;;;;;;;;;;IAExC,MAAMC,KAAK,GAAGC,OAGZ;IACF,MAAMC,IAAI,GAAGC,MAAkC;IAE/C,MAAMC,SAAS,GAAGX,GAAG,CAAC,IAAI,CAAC;IAE3B,MAAMY,aAAa,GAAIC,MAAM,IAAK;MAChCF,SAAS,CAACG,KAAK,GAAGD,MAAM;IAC1B,CAAC;IAED,MAAME,YAAY,GAAG;MACnBC,WAAW,EAAE,UAAU;MACvBC,SAAS,EAAE;QACTC,WAAW,EAAE;UACX,MAAMC,YAAYA,CAACC,IAAI,EAAEC,QAAQ,EAAE;YACjC,IAAI;cACF,MAAMC,GAAG,GAAG,MAAMjB,UAAU,CAACe,IAAI,CAAC;cAClC,MAAMG,GAAG,GAAGD,GAAG,CAACE,IAAI;cACpBH,QAAQ,CAACI,MAAM,CAACF,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;cAC7BjB,SAAS,CAACoB,OAAO,CAAC,QAAQ,CAAC;YAC7B,CAAC,CAAC,OAAOC,GAAG,EAAE;cACZrB,SAAS,CAACsB,KAAK,CAAC,QAAQ,CAAC;YAC3B;UACF;QACF;MACF;IACF,CAAC;IAED3B,KAAK,CAAC,MAAMM,KAAK,CAACsB,UAAU,EAAGC,GAAG,IAAK;MACrC;IAAA,CACD,CAAC;IAEF7B,KAAK,CAAC,MAAMM,KAAK,CAACwB,OAAO,EAAGD,GAAG,IAAK;MAClC,IAAI,CAACA,GAAG,IAAInB,SAAS,CAACG,KAAK,EAAE;QAC3BH,SAAS,CAACG,KAAK,CAACkB,OAAO,CAAC,CAAC;QACzBrB,SAAS,CAACG,KAAK,GAAG,IAAI;MACxB;IACF,CAAC,CAAC;IAEFZ,eAAe,CAAC,MAAM;MACpB,IAAIS,SAAS,CAACG,KAAK,EAAE;QACnBH,SAAS,CAACG,KAAK,CAACkB,OAAO,CAAC,CAAC;QACzBrB,SAAS,CAACG,KAAK,GAAG,IAAI;MACxB;IACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}