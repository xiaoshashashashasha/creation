{"ast":null,"code":"/**\n * name: pinia-persistedstate-plugin\n * version: v0.1.0\n * description: A pinia plugin like vuex-persistedstate.\n * author: xiaofei\n * homepage: https://github.com/l-x-f/pinia-persistedstate-plugin#readme\n */\nfunction logGroup(mutationId, mutation, state) {\n  const group = console.groupCollapsed || console.group;\n  try {\n    group(mutationId, new Date().toLocaleString());\n    console.log(\"mutation\", mutation);\n    console.log(\"state\", state);\n    console.groupEnd();\n  } catch (e) {\n    console.log(\"\\u2014\\u2014 log end \\u2014\\u2014\");\n  }\n}\nfunction createPersistedState(options) {\n  const storage = (options == null ? void 0 : options.storage) || window && window.localStorage;\n  const key = (options == null ? void 0 : options.key) || \"pinia\";\n  const logger = (options == null ? void 0 : options.logger) || false;\n  const getState = (key2, storage2) => {\n    const value = storage2.getItem ? storage2.getItem(key2) : storage2.get(key2);\n    try {\n      return typeof value === \"string\" ? JSON.parse(value) : typeof value === \"object\" ? value : void 0;\n    } catch (err) {}\n    return void 0;\n  };\n  const setState = (key2, state, storage2) => {\n    return storage2.setItem ? storage2.setItem(key2, JSON.stringify(state)) : storage2.set(key2, JSON.stringify(state));\n  };\n  return Context => {\n    const store = Context.store;\n    const tempKey = `${key}-${store.$id}`;\n    const data = getState(tempKey, storage);\n    data && store.$patch(data);\n    store.$subscribe((mutation, state) => {\n      logger && logGroup(mutation.storeId, mutation, state);\n      const tempKey2 = `${key}-${mutation.storeId}`;\n      setState(tempKey2, state, storage);\n    });\n  };\n}\nexport { createPersistedState };","map":{"version":3,"names":["logGroup","mutationId","mutation","state","group","console","groupCollapsed","Date","toLocaleString","log","groupEnd","e","createPersistedState","options","storage","window","localStorage","key","logger","getState","key2","storage2","value","getItem","get","JSON","parse","err","setState","setItem","stringify","set","Context","store","tempKey","$id","data","$patch","$subscribe","storeId","tempKey2"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/node_modules/pinia-persistedstate-plugin/dist/pinia-persistedstate-plugin.es.js"],"sourcesContent":["/**\n * name: pinia-persistedstate-plugin\n * version: v0.1.0\n * description: A pinia plugin like vuex-persistedstate.\n * author: xiaofei\n * homepage: https://github.com/l-x-f/pinia-persistedstate-plugin#readme\n */\nfunction logGroup(mutationId, mutation, state) {\n  const group = console.groupCollapsed || console.group;\n  try {\n    group(mutationId, new Date().toLocaleString());\n    console.log(\"mutation\", mutation);\n    console.log(\"state\", state);\n    console.groupEnd();\n  } catch (e) {\n    console.log(\"\\u2014\\u2014 log end \\u2014\\u2014\");\n  }\n}\nfunction createPersistedState(options) {\n  const storage = (options == null ? void 0 : options.storage) || window && window.localStorage;\n  const key = (options == null ? void 0 : options.key) || \"pinia\";\n  const logger = (options == null ? void 0 : options.logger) || false;\n  const getState = (key2, storage2) => {\n    const value = storage2.getItem ? storage2.getItem(key2) : storage2.get(key2);\n    try {\n      return typeof value === \"string\" ? JSON.parse(value) : typeof value === \"object\" ? value : void 0;\n    } catch (err) {\n    }\n    return void 0;\n  };\n  const setState = (key2, state, storage2) => {\n    return storage2.setItem ? storage2.setItem(key2, JSON.stringify(state)) : storage2.set(key2, JSON.stringify(state));\n  };\n  return (Context) => {\n    const store = Context.store;\n    const tempKey = `${key}-${store.$id}`;\n    const data = getState(tempKey, storage);\n    data && store.$patch(data);\n    store.$subscribe((mutation, state) => {\n      logger && logGroup(mutation.storeId, mutation, state);\n      const tempKey2 = `${key}-${mutation.storeId}`;\n      setState(tempKey2, state, storage);\n    });\n  };\n}\nexport { createPersistedState };\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAQA,CAACC,UAAU,EAAEC,QAAQ,EAAEC,KAAK,EAAE;EAC7C,MAAMC,KAAK,GAAGC,OAAO,CAACC,cAAc,IAAID,OAAO,CAACD,KAAK;EACrD,IAAI;IACFA,KAAK,CAACH,UAAU,EAAE,IAAIM,IAAI,CAAC,CAAC,CAACC,cAAc,CAAC,CAAC,CAAC;IAC9CH,OAAO,CAACI,GAAG,CAAC,UAAU,EAAEP,QAAQ,CAAC;IACjCG,OAAO,CAACI,GAAG,CAAC,OAAO,EAAEN,KAAK,CAAC;IAC3BE,OAAO,CAACK,QAAQ,CAAC,CAAC;EACpB,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVN,OAAO,CAACI,GAAG,CAAC,mCAAmC,CAAC;EAClD;AACF;AACA,SAASG,oBAAoBA,CAACC,OAAO,EAAE;EACrC,MAAMC,OAAO,GAAG,CAACD,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,OAAO,KAAKC,MAAM,IAAIA,MAAM,CAACC,YAAY;EAC7F,MAAMC,GAAG,GAAG,CAACJ,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACI,GAAG,KAAK,OAAO;EAC/D,MAAMC,MAAM,GAAG,CAACL,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACK,MAAM,KAAK,KAAK;EACnE,MAAMC,QAAQ,GAAGA,CAACC,IAAI,EAAEC,QAAQ,KAAK;IACnC,MAAMC,KAAK,GAAGD,QAAQ,CAACE,OAAO,GAAGF,QAAQ,CAACE,OAAO,CAACH,IAAI,CAAC,GAAGC,QAAQ,CAACG,GAAG,CAACJ,IAAI,CAAC;IAC5E,IAAI;MACF,OAAO,OAAOE,KAAK,KAAK,QAAQ,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,OAAOA,KAAK,KAAK,QAAQ,GAAGA,KAAK,GAAG,KAAK,CAAC;IACnG,CAAC,CAAC,OAAOK,GAAG,EAAE,CACd;IACA,OAAO,KAAK,CAAC;EACf,CAAC;EACD,MAAMC,QAAQ,GAAGA,CAACR,IAAI,EAAEjB,KAAK,EAAEkB,QAAQ,KAAK;IAC1C,OAAOA,QAAQ,CAACQ,OAAO,GAAGR,QAAQ,CAACQ,OAAO,CAACT,IAAI,EAAEK,IAAI,CAACK,SAAS,CAAC3B,KAAK,CAAC,CAAC,GAAGkB,QAAQ,CAACU,GAAG,CAACX,IAAI,EAAEK,IAAI,CAACK,SAAS,CAAC3B,KAAK,CAAC,CAAC;EACrH,CAAC;EACD,OAAQ6B,OAAO,IAAK;IAClB,MAAMC,KAAK,GAAGD,OAAO,CAACC,KAAK;IAC3B,MAAMC,OAAO,GAAG,GAAGjB,GAAG,IAAIgB,KAAK,CAACE,GAAG,EAAE;IACrC,MAAMC,IAAI,GAAGjB,QAAQ,CAACe,OAAO,EAAEpB,OAAO,CAAC;IACvCsB,IAAI,IAAIH,KAAK,CAACI,MAAM,CAACD,IAAI,CAAC;IAC1BH,KAAK,CAACK,UAAU,CAAC,CAACpC,QAAQ,EAAEC,KAAK,KAAK;MACpCe,MAAM,IAAIlB,QAAQ,CAACE,QAAQ,CAACqC,OAAO,EAAErC,QAAQ,EAAEC,KAAK,CAAC;MACrD,MAAMqC,QAAQ,GAAG,GAAGvB,GAAG,IAAIf,QAAQ,CAACqC,OAAO,EAAE;MAC7CX,QAAQ,CAACY,QAAQ,EAAErC,KAAK,EAAEW,OAAO,CAAC;IACpC,CAAC,CAAC;EACJ,CAAC;AACH;AACA,SAASF,oBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}