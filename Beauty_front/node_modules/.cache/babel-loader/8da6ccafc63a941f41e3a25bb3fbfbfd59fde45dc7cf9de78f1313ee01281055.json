{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\nimport { ElMessage } from 'element-plus';\nimport { getChatList, getHistory, sendMessage, setMessageRead } from '@/api/prMessage';\nimport { userOtherInfoService } from '@/api/user';\nexport default {\n  __name: 'MyMessage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const chatList = ref([]);\n    const activeChat = ref(null);\n    const messages = ref([]);\n    const inputMessage = ref('');\n    const pageNum = ref(1);\n    const pageSize = ref(20);\n    const loadingMessages = ref(false);\n    const fetchChatList = async () => {\n      try {\n        const res = await getChatList();\n        if (res.data.code === 200) {\n          const tempList = res.data.data || [];\n          for (const item of tempList) {\n            try {\n              const userInfoRes = await userOtherInfoService(item.targetId);\n              if (userInfoRes.data.code === 200) {\n                item.nickname = userInfoRes.data.data.nickname;\n                item.user_pic = userInfoRes.data.data.user_pic;\n              } else {\n                item.nickname = '未知用户';\n                item.user_pic = '';\n              }\n            } catch (e) {\n              item.nickname = '未知用户';\n              item.user_pic = '';\n            }\n          }\n          chatList.value = tempList;\n        }\n      } catch (err) {\n        ElMessage.error('获取聊天列表失败');\n      }\n    };\n    const fetchMessages = async () => {\n      if (!activeChat.value) return;\n      loadingMessages.value = true;\n      try {\n        const res = await getHistory({\n          pageNum: pageNum.value,\n          pageSize: pageSize.value,\n          target_id: activeChat.value.targetId\n        });\n        if (res.data.code === 200) {\n          messages.value = res.data.data || [];\n        }\n      } catch (err) {\n        ElMessage.error('获取消息失败');\n      } finally {\n        loadingMessages.value = false;\n      }\n    };\n    const selectChat = async chat => {\n      activeChat.value = chat;\n      pageNum.value = 1;\n      await fetchMessages();\n      await setMessageRead(chat.targetId);\n    };\n    const sendMsg = async () => {\n      if (!inputMessage.value.trim() || !activeChat.value) return;\n      try {\n        await sendMessage({\n          from_id: 当前登录用户ID,\n          // TODO:换成你的实际登录用户id\n          to_id: activeChat.value.targetId,\n          content: inputMessage.value.trim()\n        });\n        inputMessage.value = '';\n        await fetchMessages();\n      } catch (err) {\n        ElMessage.error('发送失败');\n      }\n    };\n    onMounted(() => {\n      fetchChatList();\n    });\n    const __returned__ = {\n      chatList,\n      activeChat,\n      messages,\n      inputMessage,\n      pageNum,\n      pageSize,\n      loadingMessages,\n      fetchChatList,\n      fetchMessages,\n      selectChat,\n      sendMsg,\n      ref,\n      onMounted,\n      watch,\n      get ElMessage() {\n        return ElMessage;\n      },\n      get getChatList() {\n        return getChatList;\n      },\n      get getHistory() {\n        return getHistory;\n      },\n      get sendMessage() {\n        return sendMessage;\n      },\n      get setMessageRead() {\n        return setMessageRead;\n      },\n      get userOtherInfoService() {\n        return userOtherInfoService;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","watch","ElMessage","getChatList","getHistory","sendMessage","setMessageRead","userOtherInfoService","chatList","activeChat","messages","inputMessage","pageNum","pageSize","loadingMessages","fetchChatList","res","data","code","tempList","item","userInfoRes","targetId","nickname","user_pic","e","value","err","error","fetchMessages","target_id","selectChat","chat","sendMsg","trim","from_id","当前登录用户ID","to_id","content"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/views/Mine/MyMessage.vue"],"sourcesContent":["<script setup>\r\nimport {ref, onMounted, watch} from 'vue'\r\nimport {ElMessage} from 'element-plus'\r\nimport {getChatList, getHistory, sendMessage, setMessageRead} from '@/api/prMessage'\r\nimport {userOtherInfoService} from '@/api/user'\r\n\r\nconst chatList = ref([])\r\nconst activeChat = ref(null)\r\nconst messages = ref([])\r\nconst inputMessage = ref('')\r\nconst pageNum = ref(1)\r\nconst pageSize = ref(20)\r\nconst loadingMessages = ref(false)\r\n\r\nconst fetchChatList = async () => {\r\n  try {\r\n    const res = await getChatList()\r\n    if (res.data.code === 200) {\r\n      const tempList = res.data.data || []\r\n      for (const item of tempList) {\r\n        try {\r\n          const userInfoRes = await userOtherInfoService(item.targetId)\r\n          if (userInfoRes.data.code === 200) {\r\n            item.nickname = userInfoRes.data.data.nickname\r\n            item.user_pic = userInfoRes.data.data.user_pic\r\n          } else {\r\n            item.nickname = '未知用户'\r\n            item.user_pic = ''\r\n          }\r\n        } catch (e) {\r\n          item.nickname = '未知用户'\r\n          item.user_pic = ''\r\n        }\r\n      }\r\n      chatList.value = tempList\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取聊天列表失败')\r\n  }\r\n}\r\n\r\nconst fetchMessages = async () => {\r\n  if (!activeChat.value) return\r\n  loadingMessages.value = true\r\n  try {\r\n    const res = await getHistory({\r\n      pageNum: pageNum.value,\r\n      pageSize: pageSize.value,\r\n      target_id: activeChat.value.targetId\r\n    })\r\n    if (res.data.code === 200) {\r\n      messages.value = res.data.data || []\r\n    }\r\n  } catch (err) {\r\n    ElMessage.error('获取消息失败')\r\n  } finally {\r\n    loadingMessages.value = false\r\n  }\r\n}\r\n\r\nconst selectChat = async (chat) => {\r\n  activeChat.value = chat\r\n  pageNum.value = 1\r\n  await fetchMessages()\r\n  await setMessageRead(chat.targetId)\r\n}\r\n\r\nconst sendMsg = async () => {\r\n  if (!inputMessage.value.trim() || !activeChat.value) return\r\n  try {\r\n    await sendMessage({\r\n      from_id: 当前登录用户ID,  // TODO:换成你的实际登录用户id\r\n      to_id: activeChat.value.targetId,\r\n      content: inputMessage.value.trim()\r\n    })\r\n    inputMessage.value = ''\r\n    await fetchMessages()\r\n  } catch (err) {\r\n    ElMessage.error('发送失败')\r\n  }\r\n}\r\n\r\nonMounted(() => {\r\n  fetchChatList()\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"main-content\">\r\n    <div class=\"message-page\">\r\n      <div class=\"chat-list\">\r\n        <div\r\n            v-for=\"chat in chatList\"\r\n            :key=\"chat.targetId\"\r\n            class=\"chat-item\"\r\n            :class=\"{ active: activeChat && activeChat.targetId === chat.targetId }\"\r\n            @click=\"selectChat(chat)\"\r\n        >\r\n          <el-avatar :src=\"chat.user_pic\" size=\"large\">{{ chat.nickname ? chat.nickname[0] : '?' }}</el-avatar>\r\n          <div class=\"chat-info\">\r\n            <div class=\"chat-name\">{{ chat.nickname }}</div>\r\n            <div class=\"chat-last\">{{ chat.lastMessage }}</div>\r\n          </div>\r\n          <el-badge :value=\"chat.unReadCount\" v-if=\"chat.unReadCount > 0\"/>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-window\" v-if=\"activeChat\">\r\n        <div class=\"chat-header\">\r\n          与 {{ activeChat.nickname }} 的聊天\r\n        </div>\r\n\r\n        <div class=\"chat-body\" v-loading=\"loadingMessages\">\r\n          <div v-for=\"msg in messages\" :key=\"msg.message_id\" class=\"chat-message\"\r\n               :class=\"{ 'me': msg.from_id === 当前登录用户ID }\">\r\n            <div class=\"chat-content\">{{ msg.content }}</div>\r\n            <div class=\"chat-time\">{{ new Date(msg.created_at).toLocaleString() }}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"chat-input\">\r\n          <el-input\r\n              v-model=\"inputMessage\"\r\n              placeholder=\"请输入消息\"\r\n              @keyup.enter=\"sendMsg\"\r\n          />\r\n          <el-button type=\"primary\" @click=\"sendMsg\">发送</el-button>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"chat-window\" v-else>\r\n        <div class=\"chat-placeholder\">请选择一个聊天</div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\nhtml, body {\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0;\r\n  overflow: hidden;\r\n}\r\n.main-content {\r\n  flex: 1;\r\n  width: 1720px;\r\n  height: 99%;\r\n  margin: 0 auto;\r\n  margin-bottom: 10px;\r\n  background: #f5f7fa;\r\n  padding: 20px;\r\n  overflow: hidden;\r\n}\r\n.message-page {\r\n  display: flex;\r\n  height: 90vh;\r\n  background: #f5f7fa;\r\n}\r\n\r\n.chat-list {\r\n  width: 300px;\r\n  background: white;\r\n  border-right: 1px solid #ddd;\r\n  overflow-y: auto;\r\n}\r\n\r\n.chat-item {\r\n  display: flex;\r\n  align-items: center;\r\n  padding: 15px;\r\n  cursor: pointer;\r\n  border-bottom: 1px solid #eee;\r\n}\r\n\r\n.chat-item.active {\r\n  background: #e6f7ff;\r\n}\r\n\r\n.chat-info {\r\n  margin-left: 10px;\r\n  flex: 1;\r\n}\r\n\r\n.chat-name {\r\n  font-weight: bold;\r\n  margin-bottom: 5px;\r\n}\r\n\r\n.chat-last {\r\n  color: #999;\r\n  font-size: 12px;\r\n}\r\n\r\n.chat-window {\r\n  flex: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\n.chat-header {\r\n  background: white;\r\n  padding: 15px;\r\n  border-bottom: 1px solid #ddd;\r\n  font-weight: bold;\r\n}\r\n\r\n.chat-body {\r\n  flex: 1;\r\n  padding: 15px;\r\n  overflow-y: auto;\r\n  background: #f9f9f9;\r\n}\r\n\r\n.chat-message {\r\n  margin-bottom: 10px;\r\n  max-width: 60%;\r\n  word-break: break-word;\r\n}\r\n\r\n.chat-message.me {\r\n  margin-left: auto;\r\n  text-align: right;\r\n}\r\n\r\n.chat-content {\r\n  display: inline-block;\r\n  background: #409eff;\r\n  color: white;\r\n  padding: 10px;\r\n  border-radius: 8px;\r\n}\r\n\r\n.chat-message.me .chat-content {\r\n  background: #67c23a;\r\n}\r\n\r\n.chat-time {\r\n  font-size: 10px;\r\n  color: #999;\r\n  margin-top: 5px;\r\n}\r\n\r\n.chat-input {\r\n  display: flex;\r\n  padding: 15px;\r\n  background: white;\r\n  border-top: 1px solid #ddd;\r\n}\r\n\r\n.chat-placeholder {\r\n  margin: auto;\r\n  font-size: 20px;\r\n  color: #ccc;\r\n}\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}