{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ManageSwitch from \"@/components/ManageSwitch.vue\";\nimport { computed } from 'vue';\nimport { useRouter } from 'vue-router';\nimport { useStateStore } from \"@/stores/state\";\nexport default {\n  __name: 'beauty_top',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const stateStore = useStateStore();\n    const router = useRouter();\n\n    // 基于 role 值派生三个控制变量\n    const content = computed(() => props.sta === 0 || props.sta === 1 || props.sta === 2);\n    const create = computed(() => props.sta === 0 || props.sta === 1);\n    const mswitch = computed(() => props.sta === 1);\n\n    // 切换视图时跳转路由\n    const handleModeChange = isManage => {\n      if (isManage) {\n        router.push('/');\n      } else {\n        router.push('/manage');\n      }\n    };\n    const __returned__ = {\n      stateStore,\n      router,\n      content,\n      create,\n      mswitch,\n      handleModeChange,\n      ManageSwitch,\n      computed,\n      get useRouter() {\n        return useRouter;\n      },\n      get useStateStore() {\n        return useStateStore;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ManageSwitch","computed","useRouter","useStateStore","stateStore","router","content","props","sta","create","mswitch","handleModeChange","isManage","push"],"sources":["C:/Users/32561/Desktop/毕设仓库/beauty-front/src/components/beauty_top.vue"],"sourcesContent":["<script setup>\r\nimport ManageSwitch from \"@/components/ManageSwitch.vue\";\r\nimport { computed } from 'vue'\r\nimport { useRouter } from 'vue-router'\r\nimport {useStateStore} from \"@/stores/state\";\r\n\r\n\r\nconst stateStore = useStateStore()\r\nconst router = useRouter()\r\n\r\n// 基于 role 值派生三个控制变量\r\nconst content = computed(() => props.sta === 0 || props.sta === 1 || props.sta === 2)\r\nconst create = computed(() => props.sta === 0 || props.sta === 1)\r\nconst mswitch = computed(() => props.sta === 1)\r\n\r\n// 切换视图时跳转路由\r\nconst handleModeChange = (isManage) => {\r\n  if (isManage) {\r\n    router.push('/')\r\n  } else {\r\n    router.push('/manage')\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"top-box\">\r\n    <p class=\"logo\">Beauty</p>\r\n\r\n    <!-- 显示按钮部分 -->\r\n    <template v-if=\"create\">\r\n      <el-button class=\"plus_btn\">+</el-button>\r\n    </template>\r\n\r\n    <template v-if=\"content\">\r\n      <el-button class=\"creation_btn\">内 容</el-button>\r\n      <el-button class=\"haristyle_btn\">发 型</el-button>\r\n      <el-button class=\"offline_btn\">线下门店</el-button>\r\n    </template>\r\n\r\n    <!-- 显示切换开关 -->\r\n    <ManageSwitch\r\n        v-if=\"mswitch\"\r\n        class=\"manage-switch\"\r\n        @modeChange=\"handleModeChange\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n/* 样式不变 */\r\n</style>\r\n"],"mappings":";AACA,OAAOA,YAAY,MAAM,+BAA+B;AACxD,SAASC,QAAQ,QAAQ,KAAK;AAC9B,SAASC,SAAS,QAAQ,YAAY;AACtC,SAAQC,aAAa,QAAO,gBAAgB;;;;;;;IAG5C,MAAMC,UAAU,GAAGD,aAAa,CAAC,CAAC;IAClC,MAAME,MAAM,GAAGH,SAAS,CAAC,CAAC;;IAE1B;IACA,MAAMI,OAAO,GAAGL,QAAQ,CAAC,MAAMM,KAAK,CAACC,GAAG,KAAK,CAAC,IAAID,KAAK,CAACC,GAAG,KAAK,CAAC,IAAID,KAAK,CAACC,GAAG,KAAK,CAAC,CAAC;IACrF,MAAMC,MAAM,GAAGR,QAAQ,CAAC,MAAMM,KAAK,CAACC,GAAG,KAAK,CAAC,IAAID,KAAK,CAACC,GAAG,KAAK,CAAC,CAAC;IACjE,MAAME,OAAO,GAAGT,QAAQ,CAAC,MAAMM,KAAK,CAACC,GAAG,KAAK,CAAC,CAAC;;IAE/C;IACA,MAAMG,gBAAgB,GAAIC,QAAQ,IAAK;MACrC,IAAIA,QAAQ,EAAE;QACZP,MAAM,CAACQ,IAAI,CAAC,GAAG,CAAC;MAClB,CAAC,MAAM;QACLR,MAAM,CAACQ,IAAI,CAAC,SAAS,CAAC;MACxB;IACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}